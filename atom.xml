<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Clear Sky</title>
  
  <subtitle>Clear</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.clearany.com/"/>
  <updated>2018-09-07T14:55:24.000Z</updated>
  <id>http://www.clearany.com/</id>
  
  <author>
    <name>CLEAR</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个IT事故引起的思考</title>
    <link href="http://www.clearany.com/2018/09/07/%E4%B8%80%E4%B8%AAIT%E4%BA%8B%E6%95%85%E5%BC%95%E8%B5%B7%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://www.clearany.com/2018/09/07/一个IT事故引起的思考/</id>
    <published>2018-09-07T14:55:24.000Z</published>
    <updated>2018-09-07T14:55:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="事件案例"><a href="#事件案例" class="headerlink" title="事件案例"></a>事件案例</h4><p>在一个周五的傍晚，一家ISP技术支持中心的接线员不断地接到来自不同客户的质询：有些客户收不到电子邮件；有些客户却收到一些发给其他人的邮件；还有的客户无法发送任何邮件。总之，一切都乱套了，愤怒的客户开始抱怨！显然，ISP的系统出了问题。 问题究竟出在哪里？是系统遭到电脑黑客的破坏吗？公司的安全部门开始仔细地调查。结果发现，问题是由另一个业务部门当天安装的一个Java程序引起的，安装这一程序的原意是让客户能够更容易地通过网络收发电子邮件，但不幸的是，这段Java程序存在错误，而且这段Java程序的开发人员并没有把这一变化及时地通知IT部门的最高主管。在被问及此事时，他称这是一次“心血来潮”的做法。 更糟糕的是，没有人将这一变化通知技术支持中心，从而使接线员可以告诉客户，或者在企业网站上发布详细的业务中断信息。虽然这种情况不明的业务中断只持续了几个小时，但却在客户中产生了非常不良的影响。 对那些在夜晚负责管理IT系统的管理员来说，以上情况是每天都可能遇到的紧急情况。</p><h4 id="案例思考"><a href="#案例思考" class="headerlink" title="案例思考"></a>案例思考</h4><p>如果公司有一套经过测试和验证的常识准则，并要求每一个环节的员工都遵守这一准则，这种情况是完全可以避免的。这就是信息技术基础设施库（ITIL）要解决的问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;事件案例&quot;&gt;&lt;a href=&quot;#事件案例&quot; class=&quot;headerlink&quot; title=&quot;事件案例&quot;&gt;&lt;/a&gt;事件案例&lt;/h4&gt;&lt;p&gt;在一个周五的傍晚，一家ISP技术支持中心的接线员不断地接到来自不同客户的质询：有些客户收不到电子邮件；有些客户却收到一些发给
      
    
    </summary>
    
    
      <category term="cmdb" scheme="http://www.clearany.com/tags/cmdb/"/>
    
      <category term="itil" scheme="http://www.clearany.com/tags/itil/"/>
    
      <category term="itsm" scheme="http://www.clearany.com/tags/itsm/"/>
    
  </entry>
  
  <entry>
    <title>网络攻击的常见手段</title>
    <link href="http://www.clearany.com/2018/09/07/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E7%9A%84%E5%B8%B8%E8%A7%81%E6%89%8B%E6%AE%B5/"/>
    <id>http://www.clearany.com/2018/09/07/网络攻击的常见手段/</id>
    <published>2018-09-07T14:22:04.000Z</published>
    <updated>2018-09-07T14:22:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="扫描类攻击"><a href="#扫描类攻击" class="headerlink" title="扫描类攻击"></a>扫描类攻击</h4><pre><code>1、端口扫描顾名思义，通过扫描系统端口漏洞，实现攻击或控制。因此建议系统SSH、TELNET不要使用默认的端口。黑客通常会用NMAP软件扫描漏洞。2、漏洞利用黑客常用手段。通过没有权限或低级权限的用户漏洞，通过技术手段，直接获取root权限；或者通过硬件漏洞进行ARP攻击；亦或者远程控制机器，达到控制肉机的目的，因此像3389端口一定要控制好。</code></pre><h4 id="web攻击类"><a href="#web攻击类" class="headerlink" title="web攻击类"></a>web攻击类</h4><pre><code>1、网站暴力破解通过软件保利破解网站，常用工具：DVWA。2、XSS攻击常见工具：BruteXSS3、SQL注入攻击常用工具，sqlmap。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;扫描类攻击&quot;&gt;&lt;a href=&quot;#扫描类攻击&quot; class=&quot;headerlink&quot; title=&quot;扫描类攻击&quot;&gt;&lt;/a&gt;扫描类攻击&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;1、端口扫描
顾名思义，通过扫描系统端口漏洞，实现攻击或控制。因此建议系统SSH、TELNET不要使
      
    
    </summary>
    
    
      <category term="dos" scheme="http://www.clearany.com/tags/dos/"/>
    
      <category term="ddos" scheme="http://www.clearany.com/tags/ddos/"/>
    
      <category term="攻击" scheme="http://www.clearany.com/tags/%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>常见网站攻击手段原理与防御</title>
    <link href="http://www.clearany.com/2018/09/07/%E5%B8%B8%E8%A7%81%E7%BD%91%E7%AB%99%E6%94%BB%E5%87%BB%E6%89%8B%E6%AE%B5%E5%8E%9F%E7%90%86%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
    <id>http://www.clearany.com/2018/09/07/常见网站攻击手段原理与防御/</id>
    <published>2018-09-07T14:20:50.000Z</published>
    <updated>2018-09-07T14:20:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="DDOS攻击分类："><a href="#DDOS攻击分类：" class="headerlink" title="DDOS攻击分类："></a>DDOS攻击分类：</h4><pre><code>网络层攻击：    SYN-flood：利用TCP建立连接时3次握手的“漏洞”，发送源地址虚假的提交，永远无法完成三次握手。占满系统的协议栈队列资源得不到释放，进而拒绝服务。    防御方式：调整内核参数方法，减少等待及重试时间，加速资源释放    syn proxy    syn cookies    手包丢弃    Ack-flood：虚假Ack包，远不如syn-flood。    UDP-flood：使用虚假源地址UDP包，以DNS协议为主。    ICMP-flood：Ping洪水攻击。应用层攻击：    CC：通过控制傀儡主机或者寻找匿名代理服务器向目标发起大量真实的HTTP请求，最终消耗掉大量的并发资源，拖慢整个网站甚至彻底拒绝服务。    DNS-flood：发送海量的DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。    防御方法：将UPD查询强制转为TCP，要求溯源，如果是假地址就不再回应。    慢速连接攻击：针对HTTP协议，先建立起HTTP连接，设置一个较大的Conetnt-Length，每次只发送很少的字节，让服务器一直以为HTTP头部没有传输完成，这样连接一多就很快会出现连接耗尽。</code></pre><a id="more"></a><h4 id="DDOS攻击方式分类"><a href="#DDOS攻击方式分类" class="headerlink" title="DDOS攻击方式分类:"></a>DDOS攻击方式分类:</h4><pre><code>混合型：大量的攻击中，通常并不是以上述一种数据类型来攻击，往往是TCP和UDP，网络层和应用层攻击同时进行。反射型：“质询—应答”模式。将源地址伪造成攻击目的地址，则应答的“回包”被发送到目标，如果回包体积比较大或协议支持递归效果，攻击的效果会被放大，性价比高。说明：将源地址设为假的无法回应，即为SYN-flood攻击，制造流量和攻击目标收到的流量为1:1，回报率低。流量放大：SSDP协议，递归效果产生的放大倍数非常大。脉冲型：即“打打停停”，攻击持续时间非常短。（目的：避免触发自动化防御机制）链路冷洪：不直接攻击目标而是以阻塞目标网络的上一级链路为目的。（原因：避免防御系统对攻击流量分摊）</code></pre><h4 id="DDOS防御结构："><a href="#DDOS防御结构：" class="headerlink" title="DDOS防御结构："></a>DDOS防御结构：</h4><pre><code>ISP近源清洗：电信运营商提供的近源清洗和流量压制，此做法为弃卒保帅，避免全站服务对所有用户彻底无法访问。意义：对超过自身带宽储备和自身DDOS防御能力之外超大流量时补充性缓解措施。云清洗/CDN硬抗：场景-如抢购访问量非常大时，平台上在CDN层面用验证码过滤了绝大多数请求，最后到达数据库的请求量相比非常小。云清洗厂商策略：设置好网站的CNAME，将域名指向云清洗厂商的DNS服务器——&gt;云清洗厂商的DNS将穿透CDN的回源的请求指向源站——&gt;(检测到受攻击)检测方法：客户网站部署反向代理，托管所有的并发连接。——&gt;域名指向自己的清洗集群，然后再将清洗后的流量回源。总结：更改CNAME指向，等待DNS递归剩下.DC级近目的清洗：主要用到华为的ADS设备。若探针检测到受到DDOS攻击则将Internet请求都指向DDOS清洗中心——&gt;清洗完正常流量回到IDC业务机。OS/APP层：DDOS最后一道防线。主要对应用层协议做补充防护。如禁用monlist，不提供UDP服务。Web服务对相同IP/IP+cookie/HTTP头部/request URL进行检测计数-&gt;触发-&gt;阻断防御应用：对Web业务：以上四层全部适用对游戏：CDN在此场景无效，DNS引流+ADS来清洗。还有在客户端和服务端通信协议做处理（如封包加标签，依赖信息对称）服务策略：分级策略：避免某些服务导致全站不可用Failover机制：冗余技术有损服务：避免单点瓶颈，关键时刻能进行割肉。不过总的来说DDOS攻击比较恐怖，一般防御很难抵抗主要取决于哪一方拥有的带宽资源大了。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;DDOS攻击分类：&quot;&gt;&lt;a href=&quot;#DDOS攻击分类：&quot; class=&quot;headerlink&quot; title=&quot;DDOS攻击分类：&quot;&gt;&lt;/a&gt;DDOS攻击分类：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;网络层攻击：
    SYN-flood：利用TCP建立连接时3次握手的“漏洞”，发送源地址虚假的提交，永远无法完成三次握手。占满系统的协议栈队列资源得不到释放，进而拒绝服务。
    防御方式：调整内核参数方法，减少等待及重试时间，加速资源释放
    syn proxy
    syn cookies
    手包丢弃
    Ack-flood：虚假Ack包，远不如syn-flood。
    UDP-flood：使用虚假源地址UDP包，以DNS协议为主。
    ICMP-flood：Ping洪水攻击。
应用层攻击：
    CC：通过控制傀儡主机或者寻找匿名代理服务器向目标发起大量真实的HTTP请求，最终消耗掉大量的并发资源，拖慢整个网站甚至彻底拒绝服务。
    DNS-flood：发送海量的DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。
    防御方法：将UPD查询强制转为TCP，要求溯源，如果是假地址就不再回应。
    慢速连接攻击：针对HTTP协议，先建立起HTTP连接，设置一个较大的Conetnt-Length，每次只发送很少的字节，让服务器一直以为HTTP头部没有传输完成，这样连接一多就很快会出现连接耗尽。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="dos" scheme="http://www.clearany.com/tags/dos/"/>
    
      <category term="ddos" scheme="http://www.clearany.com/tags/ddos/"/>
    
      <category term="攻击" scheme="http://www.clearany.com/tags/%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>testsetsetsetestsetestsetes</title>
    <link href="http://www.clearany.com/2018/08/31/test/"/>
    <id>http://www.clearany.com/2018/08/31/test/</id>
    <published>2018-08-30T16:40:08.000Z</published>
    <updated>2018-09-14T06:38:13.966Z</updated>
    
    <content type="html"><![CDATA[<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p><img src="http://pezelc0cd.bkt.clouddn.com/image/demo.jpeg" alt="插入图片DEMO"></p><h3 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66"><br></iframe><h3 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h3><p>Idina Menze和Caleb Hyles激情对唱Let It Go：</p><iframe height="498" width="510" src="http://player.youku.com/embed/XNjcyMDU4Njg0" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;插入图片&quot;&gt;&lt;a href=&quot;#插入图片&quot; class=&quot;headerlink&quot; title=&quot;插入图片&quot;&gt;&lt;/a&gt;插入图片&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://pezelc0cd.bkt.clouddn.com/image/demo.jpeg&quot; al
      
    
    </summary>
    
    
      <category term="test" scheme="http://www.clearany.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>apt-get指令的autoclean,clean,autoremove的区别</title>
    <link href="http://www.clearany.com/2018/07/19/apt-get%E6%8C%87%E4%BB%A4%E7%9A%84autoclean,clean,autoremove%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.clearany.com/2018/07/19/apt-get指令的autoclean,clean,autoremove的区别/</id>
    <published>2018-07-19T09:10:33.000Z</published>
    <updated>2018-09-13T12:39:11.552Z</updated>
    
    <content type="html"><![CDATA[<h4 id="apt-get-autoclean"><a href="#apt-get-autoclean" class="headerlink" title="apt-get autoclean:"></a>apt-get autoclean:</h4><pre><code>如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。</code></pre><h4 id="apt-get-clean"><a href="#apt-get-clean" class="headerlink" title="apt-get clean:"></a>apt-get clean:</h4><pre><code>类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。</code></pre><h4 id="apt-get-autoremove"><a href="#apt-get-autoremove" class="headerlink" title="apt-get autoremove:"></a>apt-get autoremove:</h4><pre><code>删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。</code></pre><h4 id="apt-get-remove"><a href="#apt-get-remove" class="headerlink" title="apt-get remove"></a>apt-get remove</h4><pre><code>apt-get remove 软件包名称：删除已安装的软件包（保留配置文件）。</code></pre><h4 id="apt-get-–purge-remove"><a href="#apt-get-–purge-remove" class="headerlink" title="apt-get –purge remove"></a>apt-get –purge remove</h4><pre><code>apt-get --purge remove软件包名称：删除已安装包（不保留配置文件)。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;apt-get-autoclean&quot;&gt;&lt;a href=&quot;#apt-get-autoclean&quot; class=&quot;headerlink&quot; title=&quot;apt-get autoclean:&quot;&gt;&lt;/a&gt;apt-get autoclean:&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="autoclean" scheme="http://www.clearany.com/tags/autoclean/"/>
    
      <category term="autoremove" scheme="http://www.clearany.com/tags/autoremove/"/>
    
      <category term="clean" scheme="http://www.clearany.com/tags/clean/"/>
    
  </entry>
  
  <entry>
    <title>virtualenv介绍及基本使用</title>
    <link href="http://www.clearany.com/2017/05/19/virtualenv%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.clearany.com/2017/05/19/virtualenv介绍及基本使用/</id>
    <published>2017-05-19T11:28:27.000Z</published>
    <updated>2018-09-14T03:32:43.091Z</updated>
    
    <content type="html"><![CDATA[<h4 id="virtualenv介绍"><a href="#virtualenv介绍" class="headerlink" title="virtualenv介绍"></a>virtualenv介绍</h4><p>在python开发中，我们可能会遇到一种情况，就是当前的项目依赖的是某一个版本，但是另一个项目依赖的是另一个版本，这样就会造成依赖冲突，而virtualenv就是解决这种情况的，virtualenv通过创建一个虚拟化的python运行环境，将我们所需的依赖安装进去的，不同项目之间相互不干扰，如下所示。</p><h4 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><h4 id="virtualenv运行使用"><a href="#virtualenv运行使用" class="headerlink" title="virtualenv运行使用"></a>virtualenv运行使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建虚拟化环境</span></span><br><span class="line">virtualenv venv</span><br><span class="line"><span class="comment">#我本机此时默认的python环境为python2.7，那么此时创建的虚拟环境就是以python2.7创建的虚拟化环境，如果需要选择一个python解释器来创建虚拟化环境，命令则为：</span></span><br><span class="line">virtualenv -p /usr/bin/python2.7 venv</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br></pre></td></tr></table></figure><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>在以上完成之后就可以通过命令pip install 来安装python包了，这里安装python包就不需要root权限了，直接就可以安装十分方便。在venv的环境中，使用pip安装的包都不会再是全局性的包，只会在当前的虚拟环境中起作用，避免了污染系统环境。</p><h4 id="退出当前系统环境"><a href="#退出当前系统环境" class="headerlink" title="退出当前系统环境"></a>退出当前系统环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>virtualenv就是一个搭建虚拟化的python环境，便于不同的项目在同一台机器上开发运行。<br>virtualenv更多的还是适用于本地开发不同的项目，但是在生产环境中还是使用docker给不同的项目创建不同的容器，各自分开运行为好，不宜放在一个单独的物理机中运行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;virtualenv介绍&quot;&gt;&lt;a href=&quot;#virtualenv介绍&quot; class=&quot;headerlink&quot; title=&quot;virtualenv介绍&quot;&gt;&lt;/a&gt;virtualenv介绍&lt;/h4&gt;&lt;p&gt;在python开发中，我们可能会遇到一种情况，就是当前的项目依赖的是某一个版本，但是另一个项目依赖的是另一个版本，这样就会造成依赖冲突，而virtualenv就是解决这种情况的，virtualenv通过创建一个虚拟化的python运行环境，将我们所需的依赖安装进去的，不同项目之间相互不干扰，如下所示。&lt;/p&gt;
&lt;h4 id=&quot;安装virtualenv&quot;&gt;&lt;a href=&quot;#安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;安装virtualenv&quot;&gt;&lt;/a&gt;安装virtualenv&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;virtualenv运行使用&quot;&gt;&lt;a href=&quot;#virtualenv运行使用&quot; class=&quot;headerlink&quot; title=&quot;virtualenv运行使用&quot;&gt;&lt;/a&gt;virtualenv运行使用&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建虚拟化环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;virtualenv venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#我本机此时默认的python环境为python2.7，那么此时创建的虚拟环境就是以python2.7创建的虚拟化环境，如果需要选择一个python解释器来创建虚拟化环境，命令则为：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;virtualenv -p /usr/bin/python2.7 venv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="virtualenv" scheme="http://www.clearany.com/tags/virtualenv/"/>
    
      <category term="python" scheme="http://www.clearany.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ELK+Zookeeper+Kafka集群安装配置</title>
    <link href="http://www.clearany.com/2017/03/22/ELK+Zookeeper+Kafka%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.clearany.com/2017/03/22/ELK+Zookeeper+Kafka集群安装配置/</id>
    <published>2017-03-22T11:16:12.000Z</published>
    <updated>2018-09-14T02:57:00.485Z</updated>
    
    <content type="html"><![CDATA[<h3 id="集群部署结构示例"><a href="#集群部署结构示例" class="headerlink" title="集群部署结构示例"></a>集群部署结构示例</h3><table><thead><tr><th>结构层级</th><th>服务器</th><th>应用</th></tr></thead><tbody><tr><td>日志采集</td><td></td><td>filebeat</td></tr><tr><td>数据处理，日志缓存</td><td>192.168.20.110  192.168.20.111 192.168.20.112</td><td>jdk+logstash+kafka+zookeeper</td></tr><tr><td>转发</td><td>192.168.20.113</td><td>jdk+Logstash</td></tr><tr><td>持久、检索</td><td>192.168.9.114  192.168.9.115</td><td>jdk+elasticsearch</td></tr><tr><td>展示层</td><td>92.168.9.116</td><td>jdk+kibana+elasticsearch(master)</td></tr></tbody></table><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>1、注意防火墙2、安装JDK环境<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/profile &lt;&lt;EOF</span><br><span class="line">JAVA_HOME=/data/program/jdk1.8</span><br><span class="line">PATH=\<span class="variable">$PATH</span>:\<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>3、内核优化<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;/etc/sysctl &lt;&lt;EOF</span><br><span class="line">fs.file-max=65535</span><br><span class="line">vm.max_map_count = 655360</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;/etc/security/limits.conf &lt;&lt;EOF</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">###此文件修改后需要重新登录用户，才会生效</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="Elasticsearch集群安装配置（四、五）"><a href="#Elasticsearch集群安装配置（四、五）" class="headerlink" title="Elasticsearch集群安装配置（四、五）"></a>Elasticsearch集群安装配置（四、五）</h3><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ES下载安装</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.0.tar.gz</span><br><span class="line">tar zxvf elasticsearch-6.3.0.tar.gz</span><br><span class="line">mv elasticsearch-6.3.0.tar.gz /data/program/elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建数据和日志目录</span></span><br><span class="line">mkdir /data/program/elasticsearch/data</span><br><span class="line">mkdir /data/program/elasticsearch/logs</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加ES启动用户</span></span><br><span class="line">useradd elk</span><br><span class="line">chown -R elk:elk /data/program/elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建如下配置文件(config/elasticsearch.yml)(集群其它节点只修改node.name即可)</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/elasticsearch</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; config/elasticsearch.yml </span><br><span class="line"></span><br><span class="line">cat &gt; config/elasticsearch.yml &lt;&lt;EOF</span><br><span class="line">cluster.name: TT-LOGS</span><br><span class="line">node.name: t6</span><br><span class="line">path.data: /data/program/elasticsearch/data</span><br><span class="line">path.logs: /data/program/elasticsearch/logs</span><br><span class="line"></span><br><span class="line">bootstrap.memory_lock: <span class="literal">false</span></span><br><span class="line">bootstrap.system_call_filter: <span class="literal">false</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">transport.tcp.port: 9300</span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.9.116:9300"</span>, <span class="string">"192.168.9.115:9300"</span>, <span class="string">"192.168.9.114:9300"</span>]</span><br><span class="line">discovery.zen.minimum_master_nodes: 2m</span><br><span class="line"></span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">"*"</span></span><br><span class="line">http.cors.allow-credentials: <span class="literal">true</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改JVM内存（config/jvm.options）</span></span><br><span class="line">-Xms2g</span><br><span class="line">-Xmx2g</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动集群</span></span><br><span class="line">su elk &amp;&amp; <span class="built_in">cd</span> /data/program/elasticsearch</span><br><span class="line">./bin/elasticsearch -d</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装elasticsearch-head插件</span></span><br><span class="line">wget https://npm.taobao.org/mirrors/node/latest-v4.x/node-v4.5.0-linux-x64.tar.gz</span><br><span class="line"><span class="comment">#配置下环境变量,编辑/etc/profile添加</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/usr/<span class="built_in">local</span>/node-v4.5.0-linux-x64</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NODE_HOME</span>/bin/</span><br><span class="line"><span class="built_in">export</span> NODE_PATH=<span class="variable">$NODE_HOME</span>/lib/node_modules</span><br><span class="line"><span class="comment">#执行 source /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装npm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">npm install -g grunt</span><br><span class="line">npm install -g grunt-cli --registry=https://registry.npm.taobao.org --no-proxy</span><br><span class="line">wget https://github.com/mobz/elasticsearch-head/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入elasticsearch-head-master目录，执行下面命令</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装完成之后，修改服务器监听地址,目录：elasticsearch-head/Gruntfile.js,增加hostname属性，设置为*</span></span><br><span class="line">connect: &#123;</span><br><span class="line">    server: &#123;</span><br><span class="line">        options: &#123;</span><br><span class="line">            port: 9100,</span><br><span class="line">            hostname: <span class="string">'0.0.0.0'</span>,</span><br><span class="line">            base: <span class="string">'.'</span>,</span><br><span class="line">            keepalive: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#通过命令grunt server启动head</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; restart.sh &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">p_num=`jps|grep Elasticsearch|wc -l`</span><br><span class="line"><span class="keyword">if</span> [[ \<span class="variable">$p_num</span> &gt; 0 ]];<span class="keyword">then</span></span><br><span class="line">        jps|grep Elasticsearch|awk <span class="string">'&#123;print $1&#125;'</span>|xargs <span class="built_in">kill</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ES成功关闭"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ES进程已经关闭"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/elasticsearch</span><br><span class="line"></span><br><span class="line">runuser -l elk -c <span class="string">"/data/program/elasticsearch/bin/elasticsearch -d"</span></span><br><span class="line"><span class="keyword">if</span> [[ $? == 0 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ES成功启动"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ES启动失败"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></code></pre><h3 id="安装配置kibana（四、五）"><a href="#安装配置kibana（四、五）" class="headerlink" title="安装配置kibana（四、五）"></a>安装配置kibana（四、五）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.3.0-linux-x86_64.tar.gz</span><br><span class="line">tar zxvf kibana-6.3.0-linux-x86_64.tar.gz</span><br><span class="line">mv kibana-6.3.0-linux-x86_64 /data/program/kibana</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data/program/kibana</span><br><span class="line"><span class="comment">#配置文件在config的kibana.yml中，此处我仅修改了</span></span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: <span class="string">"10.112.101.90"</span></span><br><span class="line">elasticsearch.url: <span class="string">"http://10.112.101.90:9200"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行</span></span><br><span class="line">bin/kibana</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动脚本</span></span><br><span class="line">cat &gt; restart &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">p_num=`ps -ef|grep node|wc -l`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$p_num</span> &gt; 0 ]];<span class="keyword">then</span></span><br><span class="line">        ps -ef|grep node|awk <span class="string">'&#123;print $2&#125;'</span>|xargs <span class="built_in">kill</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"kibana成功关闭"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"kibana进程已经关闭"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/kibana</span><br><span class="line"></span><br><span class="line">runuser -l elk -c <span class="string">"nohup /data/program/kibana/bin/kibana &amp;"</span></span><br><span class="line"><span class="keyword">if</span> [[ $? == 0 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"kibana成功启动"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"kibana启动失败"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="logstash安装配置（三）"><a href="#logstash安装配置（三）" class="headerlink" title="logstash安装配置（三）"></a>logstash安装配置（三）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-6.3.0.tar.gz</span><br><span class="line">tar zxvf logstash-6.3.0.tar.gz</span><br><span class="line">mv logstash-6.3.0 /data/program/logstash</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑配置文件，这里写一个测试的（把一下内容写进一个配置文件）</span></span><br><span class="line">input &#123;</span><br><span class="line">        file &#123;</span><br><span class="line">                path =&gt; [<span class="string">"/tmp/test_data"</span>]</span><br><span class="line">                codec =&gt; json &#123;</span><br><span class="line">                        charset =&gt; <span class="string">"UTF-8"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">                hosts =&gt; [<span class="string">"172.168.254.26:9200"</span>]</span><br><span class="line">                index =&gt; <span class="string">"lalala-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">                document_type =&gt; <span class="string">"test"</span></span><br><span class="line">                <span class="comment">#user =&gt; "elastic"</span></span><br><span class="line">                <span class="comment">#password =&gt; "changeme"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动logstash</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/logstash</span><br><span class="line">nohup ./bin/logstash -f config/test.conf &amp;&gt; run.log &amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动脚本</span></span><br><span class="line"><span class="comment">#cat &gt; restart.sh &lt;&lt;EOF</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">p_num=`jps|grep Logstash|wc -l`</span><br><span class="line"><span class="keyword">if</span> [[ \<span class="variable">$p_num</span> &gt; 0 ]];<span class="keyword">then</span></span><br><span class="line">        jps|grep Logstash|awk <span class="string">'&#123;print $1&#125;'</span>|xargs <span class="built_in">kill</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Logstash成功关闭"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Logstash进程已经关闭"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/logstash</span><br><span class="line"></span><br><span class="line">runuser -l elk -c <span class="string">"nohup /data/program/logstash/bin/logstash -f /data/program/logstash/config/file_to_es.conf &amp;&gt; run.log &amp;"</span></span><br><span class="line"><span class="keyword">if</span> [[ $? == 0 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Logstash成功启动"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Logstash启动失败"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#制造些假数据进行测试</span></span><br><span class="line">cat &gt; /tmp/test_data &lt;&lt;EOF</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test"</span>, <span class="string">"age"</span>: <span class="string">"11"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test1"</span>, <span class="string">"age"</span>: <span class="string">"12"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test2"</span>, <span class="string">"age"</span>: <span class="string">"13"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test3"</span>, <span class="string">"age"</span>: <span class="string">"14"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test4"</span>, <span class="string">"age"</span>: <span class="string">"15"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test5"</span>, <span class="string">"age"</span>: <span class="string">"16"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test6"</span>, <span class="string">"age"</span>: <span class="string">"17"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test7"</span>, <span class="string">"age"</span>: <span class="string">"18"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test8"</span>, <span class="string">"age"</span>: <span class="string">"19"</span>&#125;</span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"test9"</span>, <span class="string">"age"</span>: <span class="string">"20"</span>&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问kibana，创建索引(management--&gt;index patterns--&gt;create index patterns)</span></span><br><span class="line"><span class="comment">#如果logstatsh已经开始往elasticsearch中推送数据，则在创建index下会有显示。</span></span><br></pre></td></tr></table></figure><h3 id="安装配置zookeeper集群-二"><a href="#安装配置zookeeper集群-二" class="headerlink" title="安装配置zookeeper集群(二)"></a>安装配置zookeeper集群(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">wget http://apache.01link.hk/zookeeper/stable/zookeeper-3.4.12.tar.gz</span><br><span class="line">tar zxvf zookeeper-3.4.12.tar.gz</span><br><span class="line">mv zookeeper-3.4.12.tar.gz /data/program/zookeeper</span><br><span class="line"><span class="built_in">cd</span> /data/program/zookeeper/conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line">cat &gt; zoo.cfg &lt;&lt;EOF</span><br><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/data/program/zookeeper/data</span><br><span class="line">clientPort=2181</span><br><span class="line">server.1=192.168.20.110:12888:13888</span><br><span class="line">server.2=192.168.20.111:12888:13888</span><br><span class="line">server.3=192.168.20.112:12888:13888</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建数据目录,写入id</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/zookeeper</span><br><span class="line">mkdir -p data</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; ./data/myid</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line"><span class="built_in">cd</span> data/program/zookeeper</span><br><span class="line">./bin/zkServer.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看集群状态</span></span><br><span class="line">./bin/zkServer.sh status</span><br><span class="line"></span><br><span class="line"><span class="comment">#以上所有节点配置相同，myid的值不同。</span></span><br></pre></td></tr></table></figure><h3 id="安装配置kafka集群-二"><a href="#安装配置kafka集群-二" class="headerlink" title="安装配置kafka集群(二)"></a>安装配置kafka集群(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">wget http://apache.01link.hk/kafka/1.1.0/kafka_2.11-1.1.0.tgz</span><br><span class="line">tar zxvf kafka_2.11-1.1.0.tgz</span><br><span class="line">mv kafka_2.11-1.1.0 /data/program/kafka</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件如下</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/kafka/config</span><br><span class="line">mv server.properties  server.properties.bak</span><br><span class="line">cat &gt;  server.properties  &lt;&lt;EOF</span><br><span class="line">broker.id=1</span><br><span class="line">port = 9092</span><br><span class="line">host.name = 192.168.20.110</span><br><span class="line">log.dirs=/data/program/kafka/logs</span><br><span class="line">log.retention.hours=1</span><br><span class="line">zookeeper.connect=192.168.20.110:2181,192.168.20.111:2181,192.168.20.112:2181</span><br><span class="line">default.replication.factor=2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建日志目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">mkdir -p logs</span><br><span class="line"><span class="comment">#以上配置使用其它所有节点，修改broker.id和host.name即可。</span></span><br><span class="line"><span class="comment">#配置好后，启动集群</span></span><br><span class="line">./bin/kafka-server-start.sh -daemon config/server.properties</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建topic，消费者和生产者进行测试。</span></span><br><span class="line"><span class="comment">#创建topic</span></span><br><span class="line">./bin/kafka-topics.sh --create --zookeeper 192.168.20.110:2181 --replication-factor 1 --partitions 2 --topic logview</span><br><span class="line"><span class="comment">#创建消费者</span></span><br><span class="line">./bin/kafka-console-consumer.sh --zookeeper 192.168.20.110:2181 --topic logview --from-beginning</span><br><span class="line"><span class="comment">#另一个节点创建一个生产者</span></span><br><span class="line">./bin/kafka-console-producer.sh --broker-list 192.168.20.110:9092 --topic logview</span><br><span class="line"></span><br><span class="line"><span class="comment">#生产者创建完毕后，输入任何字符，都会在消费者节点看到，说明集群简历成功。</span></span><br></pre></td></tr></table></figure><h3 id="安装配置logstatsh-二"><a href="#安装配置logstatsh-二" class="headerlink" title="安装配置logstatsh(二)"></a>安装配置logstatsh(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-6.3.0.tar.gz</span><br><span class="line">tar zxvf logstash-6.3.0.tar.gz</span><br><span class="line">mv logstash-6.3.0 /data/program/logstash</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建配置文件，从filebeat获取日志，输出到kafka集群</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/logstash/config</span><br><span class="line"></span><br><span class="line">cat &gt; filebeat_to_kafka.conf &lt;&lt;EOF</span><br><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; 5044</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    kafka &#123;</span><br><span class="line">        bootstrap_servers =&gt; <span class="string">"192.168.20.110:9092,192.168.20.111:9092,192.168.20.112:9092"</span></span><br><span class="line">        topic_id =&gt; <span class="string">"logview"</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动logstash</span></span><br><span class="line"><span class="built_in">cd</span> /data/program/logstash</span><br><span class="line">nohup ./bin/logstash -f config/filebeat_to_kafka.conf &amp;&gt; run.log &amp;</span><br></pre></td></tr></table></figure><h3 id="在应用主机安装filebeat-一"><a href="#在应用主机安装filebeat-一" class="headerlink" title="在应用主机安装filebeat(一)"></a>在应用主机安装filebeat(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.0-linux-x86_64.tar.gz</span><br><span class="line">tar zxvf filebeat-6.3.0-linux-x86_64.tar.gz</span><br><span class="line">mv filebeat-6.3.0-linux-x86_64 /data/programe/filebeat</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line"><span class="built_in">cd</span> /data/programe/filebeat</span><br><span class="line">cat &gt; filebeat.yml &lt;&lt;EOF</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /data/test.log</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: \<span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 3</span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"192.168.20.110:5044"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动filebeat</span></span><br><span class="line">nohup ./filebeat -c filebeat.yml &gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;集群部署结构示例&quot;&gt;&lt;a href=&quot;#集群部署结构示例&quot; class=&quot;headerlink&quot; title=&quot;集群部署结构示例&quot;&gt;&lt;/a&gt;集群部署结构示例&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;结构层级&lt;/th&gt;
&lt;th&gt;服务器&lt;/th&gt;
&lt;th&gt;应用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;日志采集&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;filebeat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据处理，日志缓存&lt;/td&gt;
&lt;td&gt;192.168.20.110  192.168.20.111 192.168.20.112&lt;/td&gt;
&lt;td&gt;jdk+logstash+kafka+zookeeper&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转发&lt;/td&gt;
&lt;td&gt;192.168.20.113&lt;/td&gt;
&lt;td&gt;jdk+Logstash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;持久、检索&lt;/td&gt;
&lt;td&gt;192.168.9.114  192.168.9.115&lt;/td&gt;
&lt;td&gt;jdk+elasticsearch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;展示层&lt;/td&gt;
&lt;td&gt;92.168.9.116&lt;/td&gt;
&lt;td&gt;jdk+kibana+elasticsearch(master)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="ELK" scheme="http://www.clearany.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>网站被cc攻击了该如何应对</title>
    <link href="http://www.clearany.com/2016/12/22/%E7%BD%91%E7%AB%99%E8%A2%ABcc%E6%94%BB%E5%87%BB%E4%BA%86%E8%AF%A5%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9/"/>
    <id>http://www.clearany.com/2016/12/22/网站被cc攻击了该如何应对/</id>
    <published>2016-12-22T11:45:18.000Z</published>
    <updated>2018-09-13T12:34:25.979Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的网站是使用的是Nginx做的反向代理，那么可以利用Nginx原生的limit_req模块来针对请求进行限制，(ngx_http_limit_req_module 模块)当然，也可以使用tengine的limit_req模块，对官方模块进行了增强(The Tengine Web Server)或者还有一个比较高端的模块：(yaoweibin/nginx_limit_access_module 路 GitHub), 作者是,姚神</p><a id="more"></a><p>作者：知道创宇 云安全<br>链接：<a href="https://www.zhihu.com/question/19742963/answer/375949327" target="_blank" rel="noopener">https://www.zhihu.com/question/19742963/answer/375949327</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>CC攻击原理攻击者控制某些主机不停地发大量数据包给对方服务器造成服务器资源耗尽，一直到宕机崩溃。<br>CC主要是用来攻击页面的，每个人都有这样的体验：当一个网页访问的人数特别多的时候，打开网页就慢了，CC就是模拟多个用户(多少线程就是多少用户)不停地进行访问那些需要大量数据操作(就是需要大量CPU时间)的页面，造成服务器资源的浪费，CPU长时间处于100%，永远都有处理不完的连接直至就网络拥塞，正常的访问被中止。<br>CC攻击防御策略<br>1.取消域名绑定取消域名绑定后Web服务器的CPU能够马上恢复正常状态，通过IP进行访问连接一切正常。但是不足之处也很明显，取消或者更改域名对于别人的访问带来了不变，另外，对于针对IP的CC攻击它是无效的，就算更换域名攻击者发现之后，攻击者也会对新域名实施攻击。<br>2.更改Web端口一般情况下Web服务器通过80端口对外提供服务，因此攻击者实施攻击就以默认的80端口进行攻击，所以，可以修改Web端口达到防CC攻击的目的。<br>3.IIS屏蔽IP我们通过命令或在查看日志发现了CC攻击的源IP，就可以在IIS中设置屏蔽该IP对Web站点的访问，从而达到防范IIS攻击的目的。</p><p>CC攻击的防范手段<br>1.优化代码尽可能使用缓存来存储重复的查询内容，减少重复的数据查询资源开销。减少复杂框架的调用，减少不必要的数据请求和处理逻辑。程序执行中，及时释放资源，比如及时关闭mysql连接，及时关闭memcache连接等，减少空连接消耗。<br>2.限制手段对一些负载较高的程序增加前置条件判断，可行的判断方法如下：必须具有网站签发的session信息才可以使用（可简单阻止程序发起的集中请求）；必须具有正确的referer（可有效防止嵌入式代码的攻击）；禁止一些客户端类型的请求（比如一些典型的不良蜘蛛特征）；同一session多少秒内只能执行一次。<br>3.完善日志尽可能完整保留访问日志。日志分析程序，能够尽快判断出异常访问，比如单一ip密集访问；比如特定url同比请求激增。面对来势汹汹的CC攻击，其实最好的方式还是选择第三方的云安全厂商（就像我们）来解决问题。</p><p>知道创宇国际顶尖安全研究团队为抗D保自主研发的Nightwatch Anti-CC防护引擎可以根据访问者的URL，频率、行为等访问特征，智能识别CC攻击，迅速识别CC攻击并进行拦截，在大规模CC攻击时可以避免源站资源耗尽，保证企业网站的正常访问。好的广告打完了，感谢您的阅读⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄</p><ol><li>硬件，如梭子鱼</li><li>开源waf，如openstar</li><li>商业，如知道创宇</li><li>免费 360网站卫士</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你的网站是使用的是Nginx做的反向代理，那么可以利用Nginx原生的limit_req模块来针对请求进行限制，(ngx_http_limit_req_module 模块)当然，也可以使用tengine的limit_req模块，对官方模块进行了增强(The Tengine Web Server)或者还有一个比较高端的模块：(yaoweibin/nginx_limit_access_module 路 GitHub), 作者是,姚神&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="攻击" scheme="http://www.clearany.com/tags/%E6%94%BB%E5%87%BB/"/>
    
      <category term="cc" scheme="http://www.clearany.com/tags/cc/"/>
    
  </entry>
  
  <entry>
    <title>Fail2ban的应用</title>
    <link href="http://www.clearany.com/2016/12/02/Fail2ban%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://www.clearany.com/2016/12/02/Fail2ban的应用/</id>
    <published>2016-12-02T07:46:12.000Z</published>
    <updated>2018-09-14T02:57:41.515Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><pre><code>fail2ban可以监视你的系统日志，然后匹配日志的错误信息执行相应的屏蔽动作。网上大部分教程都是关于fail2ban+iptables组合，考虑到CentOS 7已经自带Firewalld，所以这里我们也可以利用fail2ban+Firewalld来防CC攻击和SSH爆破。</code></pre><h3 id="安装fail2ban"><a href="#安装fail2ban" class="headerlink" title="安装fail2ban"></a>安装fail2ban</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS内置源并未包含fail2ban，需要先安装epel源</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line"><span class="comment">#安装fial2ban</span></span><br><span class="line"><span class="comment">#因为都用Centos7了,所有说我们需要安装支持firewalld的Fail2ban版本.(因为Centos7默认的防火墙是:firewalld)</span></span><br><span class="line">yum -y install fail2ban fail2ban-firewalld fail2ban-systemd</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/etc/fail2ban/action.d/ //采取相对应措施的目录</span><br><span class="line">/etc/fail2ban/fail2ban.conf //fail2ban的配置文件</span><br><span class="line">/etc/fail2ban/fail2ban.d/ //fail2ban的配置文件目录</span><br><span class="line">/etc/fail2ban/filter.d/ //具体过滤规则文件目录</span><br><span class="line">/etc/fail2ban/jail.conf //阻挡设定文件</span><br><span class="line">/etc/fail2ban/jail.d/ //阻挡设定文件的目录</span><br><span class="line">/etc/fail2ban/paths-*.conf //不同linux发行版下路径的相关设置，在jail.conf的[INCLUDES]里指定</span><br><span class="line">fail2ban.conf是针对fail2ban程序运行本身的一些设置。</span><br><span class="line">jail.conf 是fail2ban的业务功能设置，里面设置了需要监控那些服务以及如何保护等，里边已经针对常用的服务提供了监控方案，比如sshd、apache、3proxy等，笔者只启用了sshd的保护。有一个[DEFAULT]部分适用于所有其他部分，除非默认选项在其他部分中覆盖。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本配置解析</span></span><br><span class="line">ignoreip ：这是一个空格分隔的IP地址列表，不能被fail2ban阻止。 例如，如果连接到服务器的计算机具有静态IP地址，则可能需要在此处列出。</span><br><span class="line">bantime ：如果被fail2ban（600秒= 10分钟）捕获，主机被阻止的时间（秒）》</span><br><span class="line">maxretry ：最大 主机被fail2ban阻止之前失败的登录尝试次数。</span><br><span class="line">过滤器 ：指在/etc/fail2ban/filter.d中的相应过滤器文件。</span><br><span class="line">logpath ：fail2ban检查失败的登录尝试的日志文件。</span><br><span class="line"><span class="comment">#如/etc/fail2ban/jail.conf顶部的注释所示 ，我们不会修改/etc/fail2ban/jail.conf本身来将其调整为我们的需要，而是通过创建新的配置文件来覆盖/ etc / fail2ban / jail.local 。</span></span><br></pre></td></tr></table></figure><h4 id="默认配置及参数说明"><a href="#默认配置及参数说明" class="headerlink" title="默认配置及参数说明"></a>默认配置及参数说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建配置</span></span><br><span class="line">vi /etc/fail2ban/jail.local</span><br><span class="line"><span class="comment">#默认配置</span></span><br><span class="line">[DEFAULT]</span><br><span class="line">ignoreip = 127.0.0.1/8</span><br><span class="line">bantime  = 86400</span><br><span class="line">findtime = 600</span><br><span class="line">maxretry = 5</span><br><span class="line"><span class="comment">#这里banaction必须用firewallcmd-ipset,这是fiewalll支持的关键，如果是用Iptables请不要这样填写</span></span><br><span class="line">banaction = firewallcmd-ipset</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line"></span><br><span class="line"><span class="comment">#参数说明：</span></span><br><span class="line">ignoreip：IP白名单，白名单中的IP不会屏蔽，可填写多个以（,）分隔</span><br><span class="line">bantime：屏蔽时间，单位为秒（s）</span><br><span class="line">findtime：时间范围</span><br><span class="line">maxretry：最大次数</span><br><span class="line">banaction：屏蔽IP所使用的方法，上面使用firewalld屏蔽端口</span><br></pre></td></tr></table></figure><h4 id="SSH防爆破配置"><a href="#SSH防爆破配置" class="headerlink" title="SSH防爆破配置"></a>SSH防爆破配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#继续修改jail.local这个配置文件，在后面追加如下内容：</span></span><br><span class="line"></span><br><span class="line">[sshd]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">filter  = sshd</span><br><span class="line">port    = 22</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line">logpath = /var/<span class="built_in">log</span>/secure</span><br><span class="line"></span><br><span class="line"><span class="comment">#[sshd]：名称，可以随便填写</span></span><br><span class="line"><span class="comment">#filter：规则名称，必须填写位于filter.d目录里面的规则，sshd是fail2ban内置规则</span></span><br><span class="line"><span class="comment">#port：对应的端口</span></span><br><span class="line"><span class="comment">#action：采取的行动</span></span><br><span class="line"><span class="comment">#logpath：需要监视的日志路径</span></span><br></pre></td></tr></table></figure><h4 id="防止CC攻击"><a href="#防止CC攻击" class="headerlink" title="防止CC攻击"></a>防止CC攻击</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这里仅以Nginx为例，使用fail2ban来监视nginx日志，匹配短时间内频繁请求的IP，并使用firewalld将其IP屏蔽，达到CC防护的作用。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#需要先新建一个nginx日志匹配规则</span></span><br><span class="line">vi /etc/fail2ban/filter.d/nginx-cc.conf</span><br><span class="line"><span class="comment">#填写如下内容</span></span><br><span class="line">[Definition]</span><br><span class="line">failregex =  -.*- .*HTTP/1.* .* .*$</span><br><span class="line">ignoreregex =</span><br><span class="line"><span class="comment">#继续修改jail.local追加如下内容：</span></span><br><span class="line"></span><br><span class="line">[nginx-cc]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">port = http,https</span><br><span class="line">filter = nginx-cc</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line">maxretry = 20</span><br><span class="line">findtime = 60</span><br><span class="line">bantime = 3600</span><br><span class="line">logpath = /usr/<span class="built_in">local</span>/nginx/logs/access.log</span><br><span class="line"><span class="comment">#上面的配置意思是如果在60s内，同一IP达到20次请求，则将其IP ban 1小时，上面只是为了测试，请根据自己的实际情况修改。logpath为nginx日志路径。</span></span><br></pre></td></tr></table></figure><h4 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl start fail2ban</span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">systemctl restart fail2ban</span><br><span class="line"><span class="comment">#开机重启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> fail2ban</span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">systemctl status fail2ban.service</span><br><span class="line"><span class="comment">#查看配置状态</span></span><br><span class="line">fail2ban-client status</span><br><span class="line"><span class="comment">#默认配置</span></span><br><span class="line">vim /etc/fail2ban/jail.conf</span><br><span class="line"><span class="comment">#查看攻击者</span></span><br><span class="line">fail2ban-client status sshd</span><br><span class="line"><span class="comment">#确保防火墙已开起</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">systemctl start firewalld</span><br><span class="line"><span class="comment">#更新 SELinux 策略</span></span><br><span class="line">yum update -y selinux-policy*</span><br><span class="line"><span class="comment">#查看被禁用的ip</span></span><br><span class="line">iptables -L -n</span><br><span class="line"><span class="comment">#查看登陆失败日志</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/secure | grep <span class="string">'Failed password'</span></span><br><span class="line"><span class="comment">#解锁ip</span></span><br><span class="line">fail2ban-client <span class="built_in">set</span> sshd unbanip IPADDRESS</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;fail2ban可以监视你的系统日志，然后匹配日志的错误信息执行相应的屏蔽动作。网上大部分教程都是关于fail2ban+iptables组合，考虑到CentOS 7已经自带Firewalld，所以这里我们也可以利用fail2ban+Firewalld来防CC攻击和SSH爆破。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;安装fail2ban&quot;&gt;&lt;a href=&quot;#安装fail2ban&quot; class=&quot;headerlink&quot; title=&quot;安装fail2ban&quot;&gt;&lt;/a&gt;安装fail2ban&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#CentOS内置源并未包含fail2ban，需要先安装epel源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install epel-release&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#安装fial2ban&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#因为都用Centos7了,所有说我们需要安装支持firewalld的Fail2ban版本.(因为Centos7默认的防火墙是:firewalld)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install fail2ban fail2ban-firewalld fail2ban-systemd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Fail2ban" scheme="http://www.clearany.com/tags/Fail2ban/"/>
    
      <category term="安全" scheme="http://www.clearany.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="攻击防护" scheme="http://www.clearany.com/tags/%E6%94%BB%E5%87%BB%E9%98%B2%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>CMDB、ITIL和ITSM间的关系</title>
    <link href="http://www.clearany.com/2016/11/14/CMDB%E3%80%81ITIL%E5%92%8CITSM%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>http://www.clearany.com/2016/11/14/CMDB、ITIL和ITSM间的关系/</id>
    <published>2016-11-14T02:30:26.000Z</published>
    <updated>2018-09-13T12:39:49.983Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ITSM（Information-Technology-Service-Management）"><a href="#ITSM（Information-Technology-Service-Management）" class="headerlink" title="ITSM（Information Technology Service Management）"></a>ITSM（Information Technology Service Management）</h4><pre><code>IT项目的生命周期中只有20%的时间与规划、建设、设施有关，其余80%的时间都与IT项目的服务和运维有关。随着企业信息化建设的不断深入，为了保证IT服务的质量，ITSM应运而生。ITSM是一个理念，是一套方法论，可以帮助企业对IT服务进行有效管理的高质量。它结合了高质量服务不可缺少的流程、人员和技术三大要素：标准流程负责监控IT服务的运行状况；人员素质关系到服务质量的高低；技术则保证服务的质量和效率。这三大关键性要素的整合使ITSM 成为企业IT管理人员管理企业IT系统的法宝和利器。ITSM的根本目标也有三个：以客户为中心提供IT服务；提供高质量、低成本的服务；提供的服务是可准确计价的。ITSM从宏观的角度可以理解为是一个领域或行业；从中观的角度可以理解为是一种IT管理的方法论；从微观角度则可以理解为是一套协同运作的流程。就微观层次来讲，ITSM作为一种全新的IT管理理念和方法论，通过一套协同运作的流程，可以帮助IT部门以合理的成本提供更高质量的IT服务。</code></pre><a id="more"></a><h4 id="ITIL（Information-Technology-Infrastructure-Library）"><a href="#ITIL（Information-Technology-Infrastructure-Library）" class="headerlink" title="ITIL（Information Technology Infrastructure Library）"></a>ITIL（Information Technology Infrastructure Library）</h4><pre><code>ITIL是CCTA（英国国家计算机和电信局）于20世纪80年代中期开始开发的一套针对IT行业的服务管理标准库。ITIL产生的背景是，当时英国政府为了提高政府部门IT服务的质量，启动一个项目来邀请国内外知名IT厂商和专家共同开发一套规范化的、可进行财务计量的IT资源使用方法。这种方法应该是独立于厂商的，并且可适用于不同规模、不同技术和业务需求的组织。这个项目的最终成果就是现在被广泛认可的ITIL，它把英国各个行业在IT管理方面的最佳实践归纳起来变成规范，旨在提高IT资源的利用率和IT服务质量。目前已经成为业界通用的事实标准。</code></pre><h4 id="两者之间的关系和区别"><a href="#两者之间的关系和区别" class="headerlink" title="两者之间的关系和区别"></a>两者之间的关系和区别</h4><pre><code>1）ITIL是ITSM领域的最佳实践，ITIL为ITSM提供创建了一组核心流程和专有名词；2）ITIL并不是ITSM的全部，ITIL只是告诉我们什么该做，但没有说具体怎么做，而对ITSM而言，这些都是ITSM的范围；3）先有ITSM理念，后有ITIL标准；因为ITIL，ITSM才得到关注和发扬；4）ITIL是标准，是ITSM实施过程中的抽象和经验总结，它是ITSM实施中的一套流程和准则；5）ITIL和ITSM是企业信息化发展到一定阶段出现的产物,是IT技术在现代企业中重要性的一种体现。</code></pre><h4 id="IT管理关键模块"><a href="#IT管理关键模块" class="headerlink" title="IT管理关键模块"></a>IT管理关键模块</h4><pre><code>ITIL中有十个重要的IT管理关键模块，分别是配置管理、服务台、问题管理、变更管理、软件控制和发布、服务管理、容量管理、可用度管理、意外事件管理、费用管理。</code></pre><p>(1)配置管理(Configuration Management)<br>    配置管理的目的是在维持配置管理数据库(CMDB)中每个IT基础建设的配置记录。第二个目的是提供配置项目(CI)的报表。这包含了一些管理信息如问题记录，变动记录，版本信息，状态信息，关系信息等。在实际的项目中，CMDB常常被认为是构建其它ITIL流程的基础而优先考虑，ITIL项目的成败与是否成功建立CMDB有非常大的关系。</p><p>(2)服务台(Help Desk)<br>    服务台提供每天对IT使用者的服务窗口。使用者反馈对IT服务不满、疑问和建议等。基于这个原因，服务台应该是一个很容易让使用者可以反馈的界面窗口。服务台同时也是使用者在使用IT服务的登录点，他们的表现代表IT服务给客户的服务品质。服务台同时也要负责尽快地协助顾客恢复服务的运作，比如提供使用指引，修正，或针对某一意外事件做补救。服务台不负责意外事件的分析，这类的深入分析是属于问题管理的范畴。</p><p>(3)问题管理(Problem Management)<br>    问题管理的目的是在找出并去除IT服务中的错误，以维持一个稳定的IT服务。</p><p>(4)变更管理 (Change Management)<br>    变更管理的目的是要确保在IT服务变动的过程中能够有标准化的方法以有效地监控这些变动，降低或消除因为变动所造成的问题。所谓“变动”是指一些在IT基础建设项目上的动作所造成一个新的状态。所有在配置项目上的变动都必需纳入变更管理的控制。</p><p>(5)软件控制和发布 (Software Control &amp; Distribution)<br>    软件控制和发布的目的是要保障所有软件模块的安全性，以确保只有经过完整测试的正确版本得到授权进入正式运作环境。为了控制软件的版本，我们必需建立一个“最终软件库”(Definitive SoftwareLibrary；DSL)，这可能是一个有实体或逻辑上的储藏室。不论哪一种形式，它就是一个存放正式授权软件版本的地方。</p><p>(6)服务管理(Service Management)<br>    服务管理的目的是要在一个可接受的成本下，让服务提供者和顾客之间达成一个彼此同意的最佳服务协议。这表示服务管理是需要服务供应者和接受者之间长期沟通的。服务管理着重在从商业角度考虑的服务水准，而不是从IT的观点。长期的端到端的监控报告和每个组成部分的使用率虽然重要，但对企业的服务品质才是重点。</p><p>(7)容量管理 (Capacity Management)<br>    容量管理的目的是要支持IT服务的最佳效率，主要是在调整营运需求和IT资源的平衡。简单地说，容量管理是要确保在合适的时间，地点和适当的成本下提供合适的资源。对IT部门来说，有效地利用可用资源很重要，并且要对系统营运的未来需求制定计划。</p><p>(8)可用性管理(Availability Management)<br>    可用性管理是在正确使用资源，方法及技术的前提下，保障IT服务的可用性。当企业营运越来越依赖IT，为了维持竞争力，IT必需避免或减小预期外的当机时间。可用度管理在深入探讨那些资源和测量是维持最佳营运状态所必要的，希望能让资源的使用最有效。</p><p>(9)意外事故管理(Contingency Management)<br>    意外事件管理是处理IT的危机并要从中恢复运转，例如有一段时间无法提供服务，这需要将工作转移到另一套系统，而这并不应是平常会遇到的。我们必需发展一套在面临IT危机时能够恢复正常运转的计划以备不时之需。</p><p>(10)费用管理(Cost Management)<br>    费用管理是在提供深入了解，监督和IT恢复运作的花费。这个程序提供了相关的财务信息以期达到性价比最高。没有费用管理，就很难制定服务质量协议(Service Level Agreement)。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;ITSM（Information-Technology-Service-Management）&quot;&gt;&lt;a href=&quot;#ITSM（Information-Technology-Service-Management）&quot; class=&quot;headerlink&quot; title=&quot;ITSM（Information Technology Service Management）&quot;&gt;&lt;/a&gt;ITSM（Information Technology Service Management）&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;IT项目的生命周期中只有20%的时间与规划、建设、设施有关，其余80%的时间都与IT项目的服务和运维有关。随着企业信息化建设的不断深入，为了保证IT服务的质量，ITSM应运而生。
ITSM是一个理念，是一套方法论，可以帮助企业对IT服务进行有效管理的高质量。它结合了高质量服务不可缺少的流程、人员和技术三大要素：标准流程负责监控IT服务的运行状况；人员素质关系到服务质量的高低；技术则保证服务的质量和效率。这三大关键性要素的整合使ITSM 成为企业IT管理人员管理企业IT系统的法宝和利器。ITSM的根本目标也有三个：以客户为中心提供IT服务；提供高质量、低成本的服务；提供的服务是可准确计价的。
ITSM从宏观的角度可以理解为是一个领域或行业；从中观的角度可以理解为是一种IT管理的方法论；从微观角度则可以理解为是一套协同运作的流程。就微观层次来讲，ITSM作为一种全新的IT管理理念和方法论，通过一套协同运作的流程，可以帮助IT部门以合理的成本提供更高质量的IT服务。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="cmdb" scheme="http://www.clearany.com/tags/cmdb/"/>
    
      <category term="itil" scheme="http://www.clearany.com/tags/itil/"/>
    
      <category term="itsm" scheme="http://www.clearany.com/tags/itsm/"/>
    
  </entry>
  
  <entry>
    <title>系统初始化常用的工具包</title>
    <link href="http://www.clearany.com/2016/10/22/%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    <id>http://www.clearany.com/2016/10/22/系统初始化常用的工具包/</id>
    <published>2016-10-22T08:10:51.000Z</published>
    <updated>2018-09-13T12:37:10.883Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><pre><code>我比较喜欢操作系统最小化安装，这样虽然避免系统安装很多无用的工具和程序，但是也会为将来我们对系统的使用造成诸多的不便。为了解决诸多不便，我们可以在最小化安装系统后再去安装一些自己需要的包，这样既减少了系统资源的消耗，又能方便日后工作。以下对我常使用的工具罗列和记录。</code></pre><h4 id="YUM源管理"><a href="#YUM源管理" class="headerlink" title="YUM源管理"></a>YUM源管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line"><span class="comment">#epel提供了丰富的yum 安装第三方软件源</span></span><br></pre></td></tr></table></figure><h4 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install psmisc -y</span><br><span class="line"><span class="comment">#psmisc 提供pstree、killall、fuser等常用工具</span></span><br><span class="line"><span class="comment">#fuser 显示使用指定文件或者文件系统的进程的PID。</span></span><br><span class="line"><span class="comment">#killall 杀死某个名字的进程，它向运行指定命令的所有进程发出信号。</span></span><br><span class="line"><span class="comment">#pstree 树型显示当前运行的进程。</span></span><br><span class="line"><span class="comment">#pstree.x11 与pstree功能相同，只是在退出前需要确认。</span></span><br></pre></td></tr></table></figure><h4 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools telnet <span class="built_in">bind</span>-utils traceroute  nmap-ncat -y</span><br><span class="line"><span class="comment">#net-tools 包含了ifconfig、netstat等工具</span></span><br><span class="line"><span class="comment">#bind-utils包含nslookup dig</span></span><br></pre></td></tr></table></figure><h4 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lrzsz wget unzip zip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;我比较喜欢操作系统最小化安装，这样虽然避免系统安装很多无用的工具和程序，但是也会为将来我们对系统的使用造成诸多的不便。为了解
      
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="工具包" scheme="http://www.clearany.com/tags/%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    
      <category term="yum" scheme="http://www.clearany.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>使用CacheCloud管理Redis实例</title>
    <link href="http://www.clearany.com/2016/10/13/%E4%BD%BF%E7%94%A8CacheCloud%E7%AE%A1%E7%90%86Redis%E5%AE%9E%E4%BE%8B/"/>
    <id>http://www.clearany.com/2016/10/13/使用CacheCloud管理Redis实例/</id>
    <published>2016-10-13T05:16:20.000Z</published>
    <updated>2018-09-13T12:29:49.304Z</updated>
    
    <content type="html"><![CDATA[<h4 id="CacheCloud是什么？"><a href="#CacheCloud是什么？" class="headerlink" title="CacheCloud是什么？"></a>CacheCloud是什么？</h4><pre><code>最近在使用CacheCloud管理Redis，所以简单说一下，这里主要说一下我碰到的问题。CacheCloud官网从安装到使用文档非常详细了。CacheCloud提供一个Redis云管理平台：实现多种类型(Redis Standalone、Redis Sentinel、Redis Cluster)自动部署、解决Redis实例碎片化现象、提供完善统计、监控、运维功能、减少运维成本和误操作，提高机器的利用率，提供灵活的伸缩性，提供方便的接入客户端。</code></pre><h4 id="下载CacheCloud二进制版本"><a href="#下载CacheCloud二进制版本" class="headerlink" title="下载CacheCloud二进制版本"></a>下载CacheCloud二进制版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载CacheCloud</span></span><br><span class="line"><span class="comment">#项目源码地址：https://github.com/sohutv/cachecloud，开发者主页：https://cachecloud.github.io</span></span><br><span class="line"><span class="comment">#二进制下载地址：https://pan.baidu.com/s/1nvTv90l</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="准备Mysql环境"><a href="#准备Mysql环境" class="headerlink" title="准备Mysql环境"></a>准备Mysql环境</h4><pre><code>略...</code></pre><h4 id="准备JDK环境"><a href="#准备JDK环境" class="headerlink" title="准备JDK环境"></a>准备JDK环境</h4><pre><code>不要使用openJdk，需要使用Oracle提供的JDK，确保jdk 1.7+，去Oracle官网下载二进制版本。环境安装 略...</code></pre><h4 id="初始化CacheCloud数据"><a href="#初始化CacheCloud数据" class="headerlink" title="初始化CacheCloud数据"></a>初始化CacheCloud数据</h4><pre><code>导入项目中cachecloud.sql初始化库表结构，默认插入admin超级管理员。由于MySQL 5.7使用了严格SQL模式，会导致cachecloud.sql导入报错的，所以直接取消SQL模式即可（最好也修改一下my.cnf配置文件）。</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global sql_mode=<span class="string">''</span>;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> session sql_mode=<span class="string">''</span>;</span><br><span class="line"><span class="comment">#创建字符集为utf8的数据库并导入数据</span></span><br><span class="line">mysql&gt; create database cachecloud charset utf8;</span><br><span class="line">mysql&gt; use cachecloud;</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /root/cachecloud/script/cachecloud.sql;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建CacheCloud连接用户</span></span><br><span class="line">mysql&gt; grant all on *.* to <span class="string">'admin'</span>@<span class="string">'localhost'</span> identified by <span class="string">'admin'</span>;</span><br><span class="line">mysql&gt; grant all on *.* to <span class="string">'admin'</span>@<span class="string">'127.0.0.1'</span> identified by <span class="string">'admin'</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h4 id="CacheCloud项目配置"><a href="#CacheCloud项目配置" class="headerlink" title="CacheCloud项目配置"></a>CacheCloud项目配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/cachecloud-web/jdbc.properties </span><br><span class="line">cachecloud.db.url = jdbc:mysql://127.0.0.1:3306/cache_cloud?useUnicode=<span class="literal">true</span>&amp;characterEncoding=UTF-8</span><br><span class="line">cachecloud.db.user = admin</span><br><span class="line">cachecloud.db.password = admin</span><br><span class="line">cachecloud.maxPoolSize = 20</span><br><span class="line">jdbc.driver = com.mysql.jdbc.Driver</span><br><span class="line">jdbc.validationQuery = select 1 from dual</span><br></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre><code>执行项目根目录下的start.sh即可启动。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;CacheCloud是什么？&quot;&gt;&lt;a href=&quot;#CacheCloud是什么？&quot; class=&quot;headerlink&quot; title=&quot;CacheCloud是什么？&quot;&gt;&lt;/a&gt;CacheCloud是什么？&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;最近在使用CacheCloud管理Redis，所以简单说一下，这里主要说一下我碰到的问题。CacheCloud官网从安装到使用文档非常详细了。
CacheCloud提供一个Redis云管理平台：实现多种类型(Redis Standalone、Redis Sentinel、Redis Cluster)自动部署、解决Redis实例碎片化现象、提供完善统计、监控、运维功能、减少运维成本和误操作，提高机器的利用率，提供灵活的伸缩性，提供方便的接入客户端。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;下载CacheCloud二进制版本&quot;&gt;&lt;a href=&quot;#下载CacheCloud二进制版本&quot; class=&quot;headerlink&quot; title=&quot;下载CacheCloud二进制版本&quot;&gt;&lt;/a&gt;下载CacheCloud二进制版本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#下载CacheCloud&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#项目源码地址：https://github.com/sohutv/cachecloud，开发者主页：https://cachecloud.github.io&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#二进制下载地址：https://pan.baidu.com/s/1nvTv90l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="redis" scheme="http://www.clearany.com/tags/redis/"/>
    
      <category term="redis集群" scheme="http://www.clearany.com/tags/redis%E9%9B%86%E7%BE%A4/"/>
    
      <category term="CacheCloud" scheme="http://www.clearany.com/tags/CacheCloud/"/>
    
  </entry>
  
  <entry>
    <title>Docker的常用操作</title>
    <link href="http://www.clearany.com/2016/10/09/Docker%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.clearany.com/2016/10/09/Docker的常用操作/</id>
    <published>2016-10-09T11:48:18.000Z</published>
    <updated>2018-09-13T12:47:38.655Z</updated>
    
    <content type="html"><![CDATA[<h4 id="搭建私有仓库"><a href="#搭建私有仓库" class="headerlink" title="搭建私有仓库"></a>搭建私有仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull registry</span><br><span class="line"><span class="comment">#创建数据库镜像</span></span><br><span class="line">mkdir -p /data/docker/registry</span><br><span class="line"><span class="comment">#启动容器，建立registry实例。/data/docker/registry/ 这个为物理机的路径。</span></span><br><span class="line">docker run -d --name registry -p 5000:5000 --restart=always -v /data/docker/registry/:/var/lib/registry/ registry</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置daemon.json，去掉docker默认的https的访问</span></span><br><span class="line">cat /etc/docker/daemon.json</span><br><span class="line">&#123; <span class="string">"insecure-registries"</span>:[<span class="string">"192.168.3.180:5000"</span>] &#125;</span><br></pre></td></tr></table></figure><h4 id="Docker-CLI自动补全"><a href="#Docker-CLI自动补全" class="headerlink" title="Docker CLI自动补全"></a>Docker CLI自动补全</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行以下脚本，重新打开shell即可</span></span><br><span class="line">yum install -y bash-completion</span><br><span class="line">/usr/share/bash-completion/bash_completion</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Dockerfile生成镜像</span></span><br><span class="line">docker build -t group/nginx .</span><br><span class="line"><span class="comment">#-t 指定生成镜像的名字</span></span><br><span class="line"><span class="comment">#.  指定Dockerfile的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拉取镜像，从默认仓库</span></span><br><span class="line">docker pull nginx</span><br><span class="line"><span class="comment">#拉取镜像，从指定仓库</span></span><br><span class="line">docker pull 192.168.3.180:5000/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看本地镜像 -a，代表所有镜像</span></span><br><span class="line">docker images -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除镜像,rmi 后面可以是镜像名称或者ID,-f 代表强制删除</span></span><br><span class="line">docker rmi -f nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#tag镜像</span></span><br><span class="line">docker tag nginx 192.168.3.180:5000/nginx:v1.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交镜像</span></span><br><span class="line">docker push 192.168.3.180:5000/nginx:v1.2</span><br></pre></td></tr></table></figure><h4 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行一个容器</span></span><br><span class="line">docker run -dit -p 80:8080 -v /volume/:/data 015502052fc4</span><br><span class="line">docker run -dit -p 80:8080 -v /volume/:/data 192.168.3.180:5000/nginx:v1.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入容器Shell(可交互)</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 578e7904aae7 /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动一个容器</span></span><br><span class="line">docker start 578e7904aae7</span><br><span class="line"><span class="comment">#关闭一个容器</span></span><br><span class="line">docker stop 578e7904aae7</span><br><span class="line"><span class="comment">#删除一个容器</span></span><br><span class="line">docker rm 578e7904aae7</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;搭建私有仓库&quot;&gt;&lt;a href=&quot;#搭建私有仓库&quot; class=&quot;headerlink&quot; title=&quot;搭建私有仓库&quot;&gt;&lt;/a&gt;搭建私有仓库&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#拉取镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull registry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建数据库镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p /data/docker/registry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#启动容器，建立registry实例。/data/docker/registry/ 这个为物理机的路径。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d --name registry -p 5000:5000 --restart=always -v /data/docker/registry/:/var/lib/registry/ registry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#配置daemon.json，去掉docker默认的https的访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/docker/daemon.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;insecure-registries&quot;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&quot;192.168.3.180:5000&quot;&lt;/span&gt;] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Docker-CLI自动补全&quot;&gt;&lt;a href=&quot;#Docker-CLI自动补全&quot; class=&quot;headerlink&quot; title=&quot;Docker CLI自动补全&quot;&gt;&lt;/a&gt;Docker CLI自动补全&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#执行以下脚本，重新打开shell即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y bash-completion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/share/bash-completion/bash_completion&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="容器化" scheme="http://www.clearany.com/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
    
      <category term="docker" scheme="http://www.clearany.com/tags/docker/"/>
    
      <category term="容器化" scheme="http://www.clearany.com/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker的核心及概念</title>
    <link href="http://www.clearany.com/2016/10/09/Docker%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8F%8A%E6%A6%82%E5%BF%B5/"/>
    <id>http://www.clearany.com/2016/10/09/Docker的核心及概念/</id>
    <published>2016-10-09T06:10:00.000Z</published>
    <updated>2018-09-13T12:49:02.568Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.machunpeng.cn/server/../Public/Uploads/2018-04-26/5ae16fe530602.jpg" alt=""></p><h4 id="镜像-image"><a href="#镜像-image" class="headerlink" title="镜像 image"></a>镜像 image</h4><pre><code>Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。image 是二进制文件。实际开发中，一个 image 文件往往通过继承另一个 image 文件，加上一些个性化设置而生成。举例来说，你可以在 Ubuntu 的 image 基础上，往里面加入 Apache 服务器，形成你的 image。</code></pre><a id="more"></a><h4 id="仓库-registry"><a href="#仓库-registry" class="headerlink" title="仓库 registry"></a>仓库 registry</h4><pre><code>仓库是集中存放镜像的地方，注册服务器是存放仓库的具体服务器，每个服务器可以有多个仓库，每个仓库可以有多个镜像。仓库分为公共仓库和私有仓库。1、Docker HubDocker官方维护了一个公共的仓库https://hub.docker.com 其中包含了15000多个镜像，大部分需求都可以通过DockerHub中直接下载镜像来实现。我们可以通过docker login命令来输入用户名、密码和邮箱来完成注册和登录。注册成功后，本地用户目录的.dockercfg中将保存用户的认证信息。我们可以通过docker search命令来搜索镜像，docker pull 下载镜像,docker push命令上传本地镜像。2、创建和使用私有仓库我们可以通过官方提供的registry镜像来简单搭建一套本地私有仓库。</code></pre><h4 id="容器-container"><a href="#容器-container" class="headerlink" title="容器 container"></a>容器 container</h4><pre><code>容器是从镜像创建的应用运行实例，容器之间是相互隔离、互不可见的。可以把容器看做一个简易版的linux系统环境（包括root权限、进程空间、用户空间和网络空间等），以及运行在这个环境上的应用打包而成的应用盒子。镜像自身是自读的，容器从镜像启动的时候，docker会在镜像的最上层创建一个可写文件层，镜像本身保持不变。可以利用docker create命令创建一个容器，创建后的的容器处于停止状态，可以使用docker start命令来启动它。也可以运行docker run命令来直接从镜像启动运行一个容器。docker run = docker create + docker start。 当利用docker run创建并启动一个容器时，docker在后台的标准操作包括：（1）检查本地是否存在指定的镜像，不存在就从公有仓库下载。（2）利用镜像创建并启动一个容器。（3）分配一个文件系统，并在只读的镜像层外面挂载一层可读写层。（4）从宿主机配置的网桥接口中桥接一个虚拟的接口到容器中。（5）从地址池中配置一个IP地址给容器。（6）执行用户指定的应用程序。（7）执行完毕后容器终止。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.machunpeng.cn/server/../Public/Uploads/2018-04-26/5ae16fe530602.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;镜像-image&quot;&gt;&lt;a href=&quot;#镜像-image&quot; class=&quot;headerlink&quot; title=&quot;镜像 image&quot;&gt;&lt;/a&gt;镜像 image&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。
image 是二进制文件。实际开发中，一个 image 文件往往通过继承另一个 image 文件，加上一些个性化设置而生成。举例来说，你可以在 Ubuntu 的 image 基础上，往里面加入 Apache 服务器，形成你的 image。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="容器化" scheme="http://www.clearany.com/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
    
      <category term="docker" scheme="http://www.clearany.com/tags/docker/"/>
    
      <category term="容器化" scheme="http://www.clearany.com/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker简介</title>
    <link href="http://www.clearany.com/2016/10/09/Docker%E7%AE%80%E4%BB%8B/"/>
    <id>http://www.clearany.com/2016/10/09/Docker简介/</id>
    <published>2016-10-09T05:58:18.000Z</published>
    <updated>2018-09-13T12:49:27.802Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境配置的难题"><a href="#环境配置的难题" class="headerlink" title="环境配置的难题"></a>环境配置的难题</h4><p>2013年发布至今， Docker 一直广受瞩目，被认为可能会改变软件行业。<br>但是，许多人并不清楚 Docker 到底是什么，要解决什么问题，好处又在哪里？本文就来详细解释，帮助大家理解它，还带有简单易懂的实例，教你如何将它用于日常开发。<br>软件开发最大的麻烦事之一，就是环境配置。用户计算机的环境都不相同，你怎么知道自家的软件，能在那些机器跑起来？<br>用户必须保证两件事：操作系统的设置，各种库和组件的安装。只有它们都正确，软件才能运行。举例来说，安装一个 Python 应用，计算机必须有 Python 引擎，还必须有各种依赖，可能还要配置环境变量。<br>如果某些老旧的模块与当前环境不兼容，那就麻烦了。开发者常常会说：”它在我的机器可以跑了”（It works on my machine），言下之意就是，其他机器很可能跑不了。<br>环境配置如此麻烦，换一台机器，就要重来一次，旷日费时。很多人想到，能不能从根本上解决问题，软件可以带环境安装？也就是说，安装的时候，把原始环境一模一样地复制过来。<br><a id="more"></a></p><h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h4><p>虚拟机（virtual machine）就是带环境安装的一种解决方案。它可以在一种操作系统里面运行另一种操作系统，比如在 Windows 系统里面运行 Linux 系统。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。<br>虽然用户可以通过虚拟机还原软件的原始环境。但是，这个方案有几个缺点。<br>（1）资源占用多<br>虚拟机会独占一部分内存和硬盘空间。它运行的时候，其他程序就不能使用这些资源了。哪怕虚拟机里面的应用程序，真正使用的内存只有 1MB，虚拟机依然需要几百 MB 的内存才能运行。<br>（2）冗余步骤多<br>虚拟机是完整的操作系统，一些系统级别的操作步骤，往往无法跳过，比如用户登录。<br>（3）启动慢<br>启动操作系统需要多久，启动虚拟机就需要多久。可能要等几分钟，应用程序才能真正运行。</p><h4 id="Linux-容器"><a href="#Linux-容器" class="headerlink" title="Linux 容器"></a>Linux 容器</h4><p>由于虚拟机存在这些缺点，Linux 发展出了另一种虚拟化技术：Linux 容器（Linux Containers，缩写为 LXC）。<br>Linux 容器不是模拟一个完整的操作系统，而是对进程进行隔离。或者说，在正常进程的外面套了一个保护层。对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。<br>由于容器是进程级别的，相比虚拟机有很多优势。<br>（1）启动快<br>容器里面的应用，直接就是底层系统的一个进程，而不是虚拟机内部的进程。所以，启动容器相当于启动本机的一个进程，而不是启动一个操作系统，速度就快很多。<br>（2）资源占用少<br>容器只占用需要的资源，不占用那些没有用到的资源；虚拟机由于是完整的操作系统，不可避免要占用所有资源。另外，多个容器可以共享资源，虚拟机都是独享资源。<br>（3）体积小<br>容器只要包含用到的组件即可，而虚拟机是整个操作系统的打包，所以容器文件比虚拟机文件要小很多。<br>总之，容器有点像轻量级的虚拟机，能够提供虚拟化的环境，但是成本开销小得多。</p><h4 id="Docker-是什么"><a href="#Docker-是什么" class="headerlink" title="Docker 是什么"></a>Docker 是什么</h4><p>Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。它是目前最流行的 Linux 容器解决方案。<br>Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。<br>总体来说，Docker 的接口相当简单，用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</p><h4 id="Docker-的用途"><a href="#Docker-的用途" class="headerlink" title="Docker 的用途"></a>Docker 的用途</h4><p> Docker 的主要用途，目前有三大类。<br>（1）提供一次性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建的环境。<br>（2）提供弹性的云服务。因为 Docker 容器可以随开随关，很适合动态扩容和缩容。<br>（3）组建微服务架构。通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境配置的难题&quot;&gt;&lt;a href=&quot;#环境配置的难题&quot; class=&quot;headerlink&quot; title=&quot;环境配置的难题&quot;&gt;&lt;/a&gt;环境配置的难题&lt;/h4&gt;&lt;p&gt;2013年发布至今， Docker 一直广受瞩目，被认为可能会改变软件行业。&lt;br&gt;但是，许多人并不清楚 Docker 到底是什么，要解决什么问题，好处又在哪里？本文就来详细解释，帮助大家理解它，还带有简单易懂的实例，教你如何将它用于日常开发。&lt;br&gt;软件开发最大的麻烦事之一，就是环境配置。用户计算机的环境都不相同，你怎么知道自家的软件，能在那些机器跑起来？&lt;br&gt;用户必须保证两件事：操作系统的设置，各种库和组件的安装。只有它们都正确，软件才能运行。举例来说，安装一个 Python 应用，计算机必须有 Python 引擎，还必须有各种依赖，可能还要配置环境变量。&lt;br&gt;如果某些老旧的模块与当前环境不兼容，那就麻烦了。开发者常常会说：”它在我的机器可以跑了”（It works on my machine），言下之意就是，其他机器很可能跑不了。&lt;br&gt;环境配置如此麻烦，换一台机器，就要重来一次，旷日费时。很多人想到，能不能从根本上解决问题，软件可以带环境安装？也就是说，安装的时候，把原始环境一模一样地复制过来。&lt;br&gt;
    
    </summary>
    
      <category term="容器化" scheme="http://www.clearany.com/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
    
      <category term="docker" scheme="http://www.clearany.com/tags/docker/"/>
    
      <category term="容器化" scheme="http://www.clearany.com/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>单机多网口高可用实现</title>
    <link href="http://www.clearany.com/2016/07/13/%E5%8D%95%E6%9C%BA%E5%A4%9A%E7%BD%91%E5%8F%A3%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.clearany.com/2016/07/13/单机多网口高可用实现/</id>
    <published>2016-07-13T05:16:20.000Z</published>
    <updated>2018-09-13T12:27:36.733Z</updated>
    
    <content type="html"><![CDATA[<h4 id="查看内核是否支持bonding模块"><a href="#查看内核是否支持bonding模块" class="headerlink" title="查看内核是否支持bonding模块"></a>查看内核是否支持bonding模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mfsmaster ~]<span class="comment"># cat /boot/config-2.6.32-358.el6.x86_64 |grep -i bonding</span></span><br><span class="line">CONFIG_BONDING=m</span><br></pre></td></tr></table></figure><h4 id="创建虚拟网口定义文件"><a href="#创建虚拟网口定义文件" class="headerlink" title="创建虚拟网口定义文件"></a>创建虚拟网口定义文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-bond0</span><br><span class="line">DEVICE=<span class="string">"bond0"</span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">IPV6INIT=<span class="string">"no"</span></span><br><span class="line">IPADDR=172.26.1.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=172.26.1.254</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">DNS2=211.136.20.203</span><br><span class="line">MTU=<span class="string">"1500"</span></span><br><span class="line">NM_CONTROLLED=<span class="string">"yes"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">USERCTL=<span class="string">"no"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="修改要绑定的物理网口定义文件"><a href="#修改要绑定的物理网口定义文件" class="headerlink" title="修改要绑定的物理网口定义文件"></a>修改要绑定的物理网口定义文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">USERCTL=no</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br><span class="line"></span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-eth1</span><br><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">USERCTL=no</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure><h4 id="创建bonding-conf文件"><a href="#创建bonding-conf文件" class="headerlink" title="创建bonding.conf文件"></a>创建bonding.conf文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat　/etc/modprobe.d／bonding.conf</span><br><span class="line"><span class="built_in">alias</span> bond0 bonding</span><br><span class="line">options bond0 miimon=100 mode=1</span><br><span class="line"></span><br><span class="line">＃重启网络服务，完成</span><br><span class="line">service network restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;查看内核是否支持bonding模块&quot;&gt;&lt;a href=&quot;#查看内核是否支持bonding模块&quot; class=&quot;headerlink&quot; title=&quot;查看内核是否支持bonding模块&quot;&gt;&lt;/a&gt;查看内核是否支持bonding模块&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@mfsmaster ~]&lt;span class=&quot;comment&quot;&gt;# cat /boot/config-2.6.32-358.el6.x86_64 |grep -i bonding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CONFIG_BONDING=m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建虚拟网口定义文件&quot;&gt;&lt;a href=&quot;#创建虚拟网口定义文件&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟网口定义文件&quot;&gt;&lt;/a&gt;创建虚拟网口定义文件&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/sysconfig/network-scripts/ifcfg-bond0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DEVICE=&lt;span class=&quot;string&quot;&gt;&quot;bond0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BOOTPROTO=&lt;span class=&quot;string&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPV6INIT=&lt;span class=&quot;string&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPADDR=172.26.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NETMASK=255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GATEWAY=172.26.1.254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS1=114.114.114.114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS2=211.136.20.203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MTU=&lt;span class=&quot;string&quot;&gt;&quot;1500&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NM_CONTROLLED=&lt;span class=&quot;string&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ONBOOT=&lt;span class=&quot;string&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYPE=&lt;span class=&quot;string&quot;&gt;&quot;Ethernet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USERCTL=&lt;span class=&quot;string&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="网卡绑定" scheme="http://www.clearany.com/tags/%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A/"/>
    
      <category term="高可用" scheme="http://www.clearany.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Firewalld的应用</title>
    <link href="http://www.clearany.com/2016/07/12/Firewalld%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://www.clearany.com/2016/07/12/Firewalld的应用/</id>
    <published>2016-07-12T03:21:48.000Z</published>
    <updated>2018-09-14T02:58:34.099Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><pre><code>Firewalld服务是红帽RHEL7系统中默认的防火墙管理工具，特点是拥有运行时配置与永久配置选项且能够支持动态更新以及&quot;zone&quot;的区域功能概念，使用图形化工具firewall-config或文本管理工具firewall-cmd。　防火墙的网络区域定义了网络连接的可信等级，我们可以根据不同场景来调用不同的firewalld区域</code></pre><h4 id="zone概念"><a href="#zone概念" class="headerlink" title="zone概念"></a>zone概念</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">硬件防火墙默认一般有三个区，firewalld引入这一概念系统默认存在以下区域：</span><br><span class="line">drop：（丢弃），任何接受的网络数据包都被丢弃，没有任何回复。仅能有发送出去的网络连接。</span><br><span class="line">block：（限制）拒绝所有外部连接，允许内部发起的连接，任何接受的网络连接都被IPV4的icmp-host-prohibited信息和ipv6的icmp6-adm-prohibited信息所拒绝。</span><br><span class="line">public：（公共）在公共区域内使用，不能相信网络内的其他计算机不会对你的计算造成危害，只能接受经过选取的连接。</span><br><span class="line">external：（外部）特别是为路由器启用了伪装功能的外部网。你不能信任来自网络的其他计算，不嫩更相信他们不会对你的计算机造成危害，只能接受经过选择的连接。</span><br><span class="line">dmz：（非军事区）用于你的非军事区内的电脑，此区域内可公开访问，可以有限地进入你的内部网络，仅仅接受经过选择的连接。</span><br><span class="line">work：用于工作区。你可以基本相信网络内的其他电脑不会危害你的电脑。仅仅接受经过选择的连接。</span><br><span class="line">home：用于家庭网络。你可以基本相信网络内的其他计算机不会危害你的计算机。仅仅接受经过选择的连接。</span><br><span class="line">internal：用于内部网络，你可以基本信任网络内的其他计算机不会威胁你的计算机，仅仅接受经过选择的连接。</span><br><span class="line">trusted：可接受所有的网络连接</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="安装运行Firewalld"><a href="#安装运行Firewalld" class="headerlink" title="安装运行Firewalld"></a>安装运行Firewalld</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install firewalld firewall-config</span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl start  firewalld</span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">systemctl status firewalld 或者 firewall-cmd --state</span><br><span class="line"><span class="comment">#停止</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment">#禁用</span></span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h4 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看版本</span></span><br><span class="line">firewall-cmd --version</span><br><span class="line"><span class="comment">#查看帮助</span></span><br><span class="line">firewall-cmd --<span class="built_in">help</span></span><br><span class="line"><span class="comment">#显示状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"><span class="comment">#查看区域信息</span></span><br><span class="line">firewall-cmd --get-active-zones</span><br><span class="line"><span class="comment">#查看当前的区域</span></span><br><span class="line">firewall-cmd --get-default-zone</span><br><span class="line"><span class="comment">#查看指定接口所属区域</span></span><br><span class="line">firewall-cmd --get-zone-of-interface=eth0</span><br><span class="line"><span class="comment">#给指定网卡设置zone</span></span><br><span class="line">firewall-cmd --zone=public --add-interface=eth0</span><br><span class="line"><span class="comment">#针对网卡更改zone</span></span><br><span class="line">firewall-cmd --zone=dmz --change-interface=eth0</span><br><span class="line"><span class="comment">#针对网卡删除zone</span></span><br><span class="line">firewall-cmd --zone=dmz --remove-interface=eth0</span><br><span class="line"><span class="comment">#设置默认规则为dmz</span></span><br><span class="line">firewall-cmd --<span class="built_in">set</span>-default-zone=dmz</span><br><span class="line"><span class="comment">#查看public域中的所有服务</span></span><br><span class="line">firewall-cmd --zone=public --list-services</span><br><span class="line"><span class="comment">#查看public域中的所有端口</span></span><br><span class="line">firewall-cmd --zone=public --list-ports </span><br><span class="line"></span><br><span class="line"><span class="comment">#允许8080与8081端口流量通过public区域，立即生效且永久生效</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="comment">#拒绝192.168.10.0/24网段的用户访问ssh服务</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.10.0/24<span class="string">" service name="</span>ssh<span class="string">" reject"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将访问主机888端口的请求转发至22端口</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.0.85</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="comment">#不再允许http服务流量通过public区域，要求立即生效且永久生效</span></span><br><span class="line">firewall-cmd --permanent --zone=public --remove-service=http</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝所有包</span></span><br><span class="line">firewall-cmd --panic-on</span><br><span class="line"><span class="comment">#取消拒绝状态</span></span><br><span class="line">firewall-cmd --panic-off</span><br><span class="line"><span class="comment">#查看是否拒绝</span></span><br><span class="line">firewall-cmd --query-panic</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新防火墙规则</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --complete-reload</span><br><span class="line"><span class="comment">#两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将接口添加到区域，默认接口都在public</span></span><br><span class="line">firewall-cmd --zone=public --add-interface=eth0</span><br><span class="line"><span class="comment">#永久生效再加上 --permanent 然后reload防火墙</span></span><br><span class="line"><span class="comment">#设置默认接口区域</span></span><br><span class="line"><span class="comment"># firewall-cmd --set-default-zone=public</span></span><br><span class="line"><span class="comment">#立即生效无需重启</span></span><br><span class="line"><span class="comment">#查看所有打开的端口：</span></span><br><span class="line">firewall-cmd --zone=dmz --list-ports</span><br><span class="line"><span class="comment">#加入一个端口到区域：</span></span><br><span class="line">firewall-cmd --zone=dmz --add-port=8080/tcp</span><br><span class="line"><span class="comment">#添加服务</span></span><br><span class="line">firewall-cmd --zone=work --add-service=smtp</span><br><span class="line"><span class="comment">#移除服务</span></span><br><span class="line">firewall-cmd --zone=work --remove-service=smtp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Firewalld服务是红帽RHEL7系统中默认的防火墙管理工具，特点是拥有运行时配置与永久配置选项且能够支持动态更新以及&amp;quot;zone&amp;quot;的区域功能概念，使用图形化工具firewall-config或文本管理工具firewall-cmd。　防火墙的网络区域定义了网络连接的可信等级，我们可以根据不同场景来调用不同的firewalld区域
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;zone概念&quot;&gt;&lt;a href=&quot;#zone概念&quot; class=&quot;headerlink&quot; title=&quot;zone概念&quot;&gt;&lt;/a&gt;zone概念&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;硬件防火墙默认一般有三个区，firewalld引入这一概念系统默认存在以下区域：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drop：（丢弃），任何接受的网络数据包都被丢弃，没有任何回复。仅能有发送出去的网络连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;block：（限制）拒绝所有外部连接，允许内部发起的连接，任何接受的网络连接都被IPV4的icmp-host-prohibited信息和ipv6的icmp6-adm-prohibited信息所拒绝。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public：（公共）在公共区域内使用，不能相信网络内的其他计算机不会对你的计算造成危害，只能接受经过选取的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external：（外部）特别是为路由器启用了伪装功能的外部网。你不能信任来自网络的其他计算，不嫩更相信他们不会对你的计算机造成危害，只能接受经过选择的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dmz：（非军事区）用于你的非军事区内的电脑，此区域内可公开访问，可以有限地进入你的内部网络，仅仅接受经过选择的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;work：用于工作区。你可以基本相信网络内的其他电脑不会危害你的电脑。仅仅接受经过选择的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;home：用于家庭网络。你可以基本相信网络内的其他计算机不会危害你的计算机。仅仅接受经过选择的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;internal：用于内部网络，你可以基本信任网络内的其他计算机不会威胁你的计算机，仅仅接受经过选择的连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trusted：可接受所有的网络连接&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.clearany.com/categories/linux/"/>
    
    
      <category term="安全" scheme="http://www.clearany.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="Firewalld" scheme="http://www.clearany.com/tags/Firewalld/"/>
    
      <category term="防火墙" scheme="http://www.clearany.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
      <category term="iptales" scheme="http://www.clearany.com/tags/iptales/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch的备份和恢复</title>
    <link href="http://www.clearany.com/2016/07/02/Elasticsearch%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/"/>
    <id>http://www.clearany.com/2016/07/02/Elasticsearch的备份和恢复/</id>
    <published>2016-07-02T11:26:42.000Z</published>
    <updated>2018-09-14T02:52:23.289Z</updated>
    
    <content type="html"><![CDATA[<h4 id="创建备份目录"><a href="#创建备份目录" class="headerlink" title="创建备份目录"></a>创建备份目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/backup</span><br><span class="line">chmod 777 /data/backup</span><br></pre></td></tr></table></figure><h4 id="修改ES配置"><a href="#修改ES配置" class="headerlink" title="修改ES配置"></a>修改ES配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在elasticsearch.yml中加入一行:</span></span><br><span class="line">path.repo:  /mnt/backup/</span><br><span class="line"><span class="comment">#或者直接修改/etc/init.d/elasticsearch,将原来的DAEMON_OPTS选项</span></span><br><span class="line">DAEMON_OPTS=<span class="string">"-d -p <span class="variable">$PID_FILE</span> --default.path.home=<span class="variable">$ES_HOME</span> --default.path.logs=<span class="variable">$LOG_DIR</span> --default.path.data=<span class="variable">$DATA_DIR</span> --default.path.conf=<span class="variable">$CONF_DIR</span>"</span></span><br><span class="line"><span class="comment">#修改为:</span></span><br><span class="line">REPO_DIR=/mnt/backup</span><br><span class="line">DAEMON_OPTS=<span class="string">"-d -p <span class="variable">$PID_FILE</span> --default.path.home=<span class="variable">$ES_HOME</span> --default.path.logs=<span class="variable">$LOG_DIR</span> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#修改后重启es集群</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="创建备份仓库"><a href="#创建备份仓库" class="headerlink" title="创建备份仓库"></a>创建备份仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip'</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">"type": "fs",</span></span><br><span class="line"><span class="string">"settings": &#123;</span></span><br><span class="line"><span class="string">    "location": "/mnt/backup/compress_snapshot",</span></span><br><span class="line"><span class="string">    "compress": true</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line"><span class="comment">#成功后结果返回&#123;"acknowledged":true&#125;. 这时查看刚创建的仓库:</span></span><br><span class="line"></span><br><span class="line">curl -XGET <span class="string">'http://192.168.1.10:9200/_snapshot?pretty'</span></span><br><span class="line"><span class="comment">#正常结果返回:</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"EsBackup_zip"</span> : &#123;</span><br><span class="line">    <span class="string">"type"</span> : <span class="string">"fs"</span>,</span><br><span class="line">    <span class="string">"settings"</span> : &#123;</span><br><span class="line">      <span class="string">"compress"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"location"</span> : <span class="string">"/mnt/backup/compress_snapshot"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="备份指定索引数据"><a href="#备份指定索引数据" class="headerlink" title="备份指定索引数据"></a>备份指定索引数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#假设要备份单个索引, 索引名为: user_behavior_201702</span></span><br><span class="line">curl -XPUT <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_user_behavior_201702'</span> -d <span class="string">'&#123;"indices": "user_behavior_201702"&#125;'</span></span><br><span class="line"><span class="comment">#提交备份快照请求后, 查看备份状态:</span></span><br><span class="line">curl -XGET <span class="string">'http://192.168.1.12:9200/_snapshot/EsBackup_zip/snapshot_user_behavior_201702?pretty'</span></span><br><span class="line"><span class="comment">#假设要备份多个索引, 比如idx_1, idx_2, idx_3, 则可以:</span></span><br><span class="line">curl -XPUT <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_some_name'</span> -d <span class="string">'&#123;"indices": "idx_1,idx_2,idx_3"&#125;'</span></span><br><span class="line"><span class="comment">#假设要备份全部索引数据, 则可以:</span></span><br><span class="line">curl -XPUT <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_all'</span></span><br></pre></td></tr></table></figure><h4 id="恢复备份索引"><a href="#恢复备份索引" class="headerlink" title="恢复备份索引"></a>恢复备份索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除已备份的索引:</span></span><br><span class="line">curl -XDELETE <span class="string">"http://192.168.1.10:9200/user_behavior_201702"</span></span><br><span class="line"><span class="comment">#恢复单个索引:</span></span><br><span class="line">curl -XPOST <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_user_behavior_201702/_restore'</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "indices": "user_behavior_201702", </span></span><br><span class="line"><span class="string">    "rename_replacement": "restored_ub_201702"</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line"><span class="comment">#恢复整个快照索引:</span></span><br><span class="line">curl -XPOST <span class="string">'http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_some_name/_restore'</span></span><br><span class="line"><span class="comment">#提交请求成功后返回&#123;"accepted":true&#125;。</span></span><br><span class="line"><span class="comment">#查看恢复状态:</span></span><br><span class="line">curl -XGET <span class="string">"http://192.168.1.10:9200/_snapshot/EsBackup_zip/snapshot_user_behavior_20170</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;创建备份目录&quot;&gt;&lt;a href=&quot;#创建备份目录&quot; class=&quot;headerlink&quot; title=&quot;创建备份目录&quot;&gt;&lt;/a&gt;创建备份目录&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /data/backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 777 /data/backup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;修改ES配置&quot;&gt;&lt;a href=&quot;#修改ES配置&quot; class=&quot;headerlink&quot; title=&quot;修改ES配置&quot;&gt;&lt;/a&gt;修改ES配置&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#在elasticsearch.yml中加入一行:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;path.repo:  /mnt/backup/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者直接修改/etc/init.d/elasticsearch,将原来的DAEMON_OPTS选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DAEMON_OPTS=&lt;span class=&quot;string&quot;&gt;&quot;-d -p &lt;span class=&quot;variable&quot;&gt;$PID_FILE&lt;/span&gt; --default.path.home=&lt;span class=&quot;variable&quot;&gt;$ES_HOME&lt;/span&gt; --default.path.logs=&lt;span class=&quot;variable&quot;&gt;$LOG_DIR&lt;/span&gt; --default.path.data=&lt;span class=&quot;variable&quot;&gt;$DATA_DIR&lt;/span&gt; --default.path.conf=&lt;span class=&quot;variable&quot;&gt;$CONF_DIR&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改为:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;REPO_DIR=/mnt/backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DAEMON_OPTS=&lt;span class=&quot;string&quot;&gt;&quot;-d -p &lt;span class=&quot;variable&quot;&gt;$PID_FILE&lt;/span&gt; --default.path.home=&lt;span class=&quot;variable&quot;&gt;$ES_HOME&lt;/span&gt; --default.path.logs=&lt;span class=&quot;variable&quot;&gt;$LOG_DIR&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;#修改后重启es集群&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.clearany.com/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch安装</title>
    <link href="http://www.clearany.com/2016/07/02/Elasticsearch%E5%AE%89%E8%A3%85/"/>
    <id>http://www.clearany.com/2016/07/02/Elasticsearch安装/</id>
    <published>2016-07-02T11:21:27.000Z</published>
    <updated>2018-09-14T02:51:59.157Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本名词"><a href="#基本名词" class="headerlink" title="基本名词"></a>基本名词</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index: es里的index相当于一个数据库。 </span><br><span class="line"><span class="built_in">type</span>: 相当于数据库里的一个表。 </span><br><span class="line">id： 唯一，相当于主键。 </span><br><span class="line">node:节点是es实例，一台机器可以运行多个实例，但是同一台机器上的实例在配置文件中要确保http和tcp端口不同。 </span><br><span class="line">cluster:代表一个集群，集群中有多个节点，其中有一个会被选为主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。 </span><br><span class="line">shards：代表索引分片，es可以把一个完整的索引分成多个分片，这样的好处是可以把一个大的索引拆分成多个，分布到不同的节点上，构成分布式搜索。分片的数量只能在索引创建前指定，并且索引创建后不能更改。 </span><br><span class="line">replicas:代表索引副本，es可以设置多个索引的副本，副本的作用一是提高系统的容错性，当个某个节点某个分片损坏或丢失时可以从副本中恢复。二是提高es的查询效率，es会自动对搜索请求进行负载均衡</span><br></pre></td></tr></table></figure><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.2.tar.gz</span><br><span class="line">tar zxvf elasticsearch-6.2.2.tar.gz</span><br><span class="line">mv elasticsearch-6.2.2 /data/program/elasticsearch-6.2.2</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">"/^#/d"</span> elasticsearch.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------- Paths ---------------------</span></span><br><span class="line">path.data: /data/program/elasticsearch/data</span><br><span class="line">path.logs: /data/program/elasticsearch/logs</span><br><span class="line"><span class="comment">#---------------- Memory --------------</span></span><br><span class="line">bootstrap.memory_lock: <span class="literal">false</span></span><br><span class="line">bootstrap.system_call_filter: <span class="literal">false</span></span><br><span class="line"><span class="comment">#--------------- Network -------------</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改内存配置文件：</span></span><br><span class="line">vim jvm.options</span><br><span class="line"></span><br><span class="line">-Xms512m</span><br><span class="line">-Xmx512m</span><br><span class="line"></span><br><span class="line"><span class="comment">#改系统参数</span></span><br><span class="line">vi /etc/sysctl.conf </span><br><span class="line"><span class="comment">#添加下面配置：</span></span><br><span class="line">vm.max_map_count=65536</span><br><span class="line"></span><br><span class="line">vi /etc/security/limits.conf </span><br><span class="line">* soft nofile 819200 </span><br><span class="line">* hard nofile 819200 </span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096 </span><br><span class="line"></span><br><span class="line">vi /etc/security/limits.d/90-nproc.conf </span><br><span class="line">* soft nproc 1024</span><br><span class="line"><span class="comment">#修改为</span></span><br><span class="line">* soft nproc 4096</span><br></pre></td></tr></table></figure><h4 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi start.sh</span><br><span class="line">runuser -l es -c <span class="string">'/data/program/elasticsearch-6.2.2/bin/elasticsearch -d'</span></span><br></pre></td></tr></table></figure><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装中文分词插件：</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/medcl/elasticsearch-analysis-ik</span><br><span class="line"><span class="comment">#下载完切换到相应版本：git checkout tags/v6.2.2</span></span><br><span class="line"><span class="comment">#进入elasticsearch-analysis-ik文件夹内执行：mvn clean package命令打包编译。</span></span><br><span class="line"><span class="comment">#将target/releases文件夹内的elasticsearch-analysis-ik-6.2.2.zip copy到es的plugins文件夹内</span></span><br><span class="line"><span class="comment">#解压后修改文件夹名称为analysis-ik</span></span><br><span class="line"><span class="comment">#重启生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装head插件</span></span><br><span class="line"><span class="comment">#在https://github.com/mobz/elasticsearch-head上下载head插件，并解压到/usr/local/elasticsearch-6.2.2/</span></span><br><span class="line"><span class="comment">#Head插件可以实现基本信息的查看，rest请求的模拟，数据的检索等等</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#必须要有node环境，没有的话需要安装：</span></span><br><span class="line">wget https://npm.taobao.org/mirrors/node/latest-v4.x/node-v4.4.7-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加环境变量：</span></span><br><span class="line">NODE_HOME=/usr/<span class="built_in">local</span>/node-v4.4.7-linux-x64</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$NODE_HOME</span>/bin </span><br><span class="line">NODE_PATH=<span class="variable">$NODE_HOME</span>/lib/node_modules </span><br><span class="line"><span class="built_in">export</span> NODE_HOME PATH NODE_PATH</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装grunt-cli</span></span><br><span class="line">npm install -g grunt-cli</span><br><span class="line">grunt -version</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改文件Gruntfile.js，在第93行添加一行：</span></span><br><span class="line">hostname: <span class="string">'0.0.0.0'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/usr/local/elasticsearch-6.2.2/elasticsearch-head下执行：</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment">#安装完成后会生成一个node_modules的文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改elasticsearch.yml配置文件，添加两行：</span></span><br><span class="line">http.cors.enabled: <span class="literal">true</span> </span><br><span class="line">http.cors.allow-origin: <span class="string">"*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行命令启动head服务：</span></span><br><span class="line">grunt server</span><br></pre></td></tr></table></figure><h4 id="导入数据测试"><a href="#导入数据测试" class="headerlink" title="导入数据测试"></a>导入数据测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">"Content-Type: application/json"</span> -XPOST <span class="string">'localhost:9200/bank/account/_bulk?pretty'</span> --data-binary <span class="string">"@accounts.json"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本名词&quot;&gt;&lt;a href=&quot;#基本名词&quot; class=&quot;headerlink&quot; title=&quot;基本名词&quot;&gt;&lt;/a&gt;基本名词&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;index: es里的index相当于一个数据库。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: 相当于数据库里的一个表。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id： 唯一，相当于主键。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node:节点是es实例，一台机器可以运行多个实例，但是同一台机器上的实例在配置文件中要确保http和tcp端口不同。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cluster:代表一个集群，集群中有多个节点，其中有一个会被选为主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shards：代表索引分片，es可以把一个完整的索引分成多个分片，这样的好处是可以把一个大的索引拆分成多个，分布到不同的节点上，构成分布式搜索。分片的数量只能在索引创建前指定，并且索引创建后不能更改。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;replicas:代表索引副本，es可以设置多个索引的副本，副本的作用一是提高系统的容错性，当个某个节点某个分片损坏或丢失时可以从副本中恢复。二是提高es的查询效率，es会自动对搜索请求进行负载均衡&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf elasticsearch-6.2.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv elasticsearch-6.2.2 /data/program/elasticsearch-6.2.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.clearany.com/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch-head介绍</title>
    <link href="http://www.clearany.com/2016/07/02/Elasticsearch-head%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.clearany.com/2016/07/02/Elasticsearch-head介绍/</id>
    <published>2016-07-02T11:10:16.000Z</published>
    <updated>2018-09-14T02:51:30.931Z</updated>
    
    <content type="html"><![CDATA[<pre><code>elasticsearch-head是一个界面化的集群操作和管理工具，可以对集群进行傻瓜式操作。你可以通过插件把它集成到es（首选方式）,也可以安装成一个独立webapp。es-head主要有三个方面的操作：显示集群的拓扑,并且能够执行索引和节点级别操作搜索接口能够查询集群中原始json或表格格式的检索数据能够快速访问并显示集群的状态有一个输入窗口,允许任意调用RESTful API。这个接口包含几个选项,可以组合在一起以产生有趣的结果; 请求方法(get、put、post、delete),查询json数据,节点和路径支持JSON验证器支持重复请求计时器支持使用javascript表达式变换结果收集结果的能力随着时间的推移(使用定时器),或比较的结果能力图表转换后的结果在一个简单的条形图(包括时间序列)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;elasticsearch-head是一个界面化的集群操作和管理工具，可以对集群进行傻瓜式操作。你可以通过插件把它集成到es（首选方式）,也可以安装成一个独立webapp。

es-head主要有三个方面的操作：

显示集群的拓扑,并且能够执行索引和节点级别
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.clearany.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.clearany.com/tags/Elasticsearch/"/>
    
      <category term="Elasticsearch-head" scheme="http://www.clearany.com/tags/Elasticsearch-head/"/>
    
  </entry>
  
</feed>
